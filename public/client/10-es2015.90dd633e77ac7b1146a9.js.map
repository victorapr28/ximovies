{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/stepper.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/stepper.js","webpack:///src/common/billing/subscriptions/subscription-stepper-state.service.ts","webpack:///src/common/core/services/local-storage.service.ts","webpack:///src/common/billing/subscriptions/paypal-subscriptions.ts","webpack:///src/common/billing/upgrade-page/upgrade-page.component.html","webpack:///src/common/billing/upgrade-page/upgrade-page.component.ts","webpack:///src/common/billing/upgrade-page/billing-plans-resolver.service.ts","webpack:///src/common/billing/upgrade-page/accepted-payments-header/accepted-payments-header.component.html","webpack:///src/common/billing/upgrade-page/accepted-payments-header/accepted-payments-header.component.ts","webpack:///src/common/billing/upgrade-page/plan-features-list/plan-features-list.component.html","webpack:///src/common/billing/upgrade-page/plan-features-list/plan-features-list.component.ts","webpack:///src/common/billing/upgrade-page/upgrade-page-aside/upgrade-page-aside.component.html","webpack:///src/common/billing/upgrade-page/upgrade-page-aside/upgrade-page-aside.component.ts","webpack:///src/common/billing/upgrade-page/order-summary/order-summary.component.html","webpack:///src/common/billing/upgrade-page/order-summary/order-summary.component.ts","webpack:///src/common/billing/credit-card-form/credit-card-form.component.html","webpack:///src/common/billing/credit-card-form/credit-card-form.component.ts","webpack:///src/common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component.html","webpack:///src/common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component.ts","webpack:///src/common/billing/subscriptions/user-subscription-page/user-subscription-page.component.html","webpack:///src/common/billing/subscriptions/user-subscription-page/user-subscription-page.component.ts","webpack:///src/common/billing/upgrade-page/currencies-list-resolver.service.ts","webpack:///src/common/billing/guards/user-subscribed-guard.service.ts","webpack:///src/common/billing/invoices/invoice.service.ts","webpack:///src/common/billing/invoices/invoice-index/invoice-index.component.html","webpack:///src/common/billing/invoices/invoice-index/invoice-index.component.ts","webpack:///src/common/billing/pricing-page/pricing-page.component.ts","webpack:///src/common/billing/pricing-page/pricing-page.component.html","webpack:///src/common/billing/billing-routing.module.ts","webpack:///src/common/billing/guards/redirect-to-upgrade-page.service.ts","webpack:///src/common/billing/plans/select-plan-panel/select-plan-panel.component.html","webpack:///src/common/billing/plans/select-plan-panel/select-plan-panel.component.ts","webpack:///src/common/billing/plans/select-plan-period-panel/select-plan-period-panel.component.html","webpack:///src/common/billing/plans/select-plan-period-panel/select-plan-period-panel.component.ts","webpack:///src/common/billing/guards/user-not-subscribed-guard.service.ts","webpack:///src/common/billing/upgrade-page/contact-widget/contact-widget.component.ts","webpack:///src/common/billing/upgrade-page/contact-widget/contact-widget.component.html","webpack:///src/common/billing/billing.module.ts"],"names":["CdkStep_ng_template_0_Template","rf","ctx","_c0","CdkStepHeader","_elementRef","this","nativeElement","focus","ɵfac","t","ɵdir","type","selectors","hostAttrs","CdkStepLabel","template","nextId","STEPPER_GLOBAL_OPTIONS","CdkStep","_stepper","stepperOptions","interacted","_editable","_optional","_completedOverride","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","_showError","showError","value","c","_getDefaultCompleted","stepControl","valid","_getDefaultError","invalid","selected","reset","_stateChanged","ɵcmp","contentQueries","dirIndex","_t","stepLabel","first","viewQuery","content","inputs","editable","optional","completed","hasError","label","errorMessage","ariaLabel","ariaLabelledby","state","exportAs","features","ngContentSelectors","decls","vars","encapsulation","changeDetection","CdkStepper","_dir","_changeDetectorRef","_document","_destroyed","Subject","_linear","_selectedIndex","selectionChange","_orientation","_groupId","_steps","index","newIndex","steps","length","Error","_anyControlsInvalidOrPending","toArray","_updateSelectedItemIndex","selectedIndex","step","indexOf","_keyManager","_stepHeader","withWrap","withVerticalOrientation","of","pipe","startWith","_layoutDirection","takeUntil","subscribe","direction","withHorizontalOrientation","updateActiveItem","changes","Math","max","next","complete","min","forEach","i","markForCheck","position","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","activeItemIndex","stepsArray","emit","previouslySelectedIndex","selectedStep","previouslySelectedStep","_containsFocus","setActiveItem","event","hasModifier","keyCode","manager","setFirstItemActive","preventDefault","setLastItemActive","onKeydown","slice","some","control","pending","stepperElement","focusedElement","activeElement","contains","linear","outputs","CdkStepperNext","hostVars","hostBindings","_handleClick","CdkStepperPrevious","previous","CdkStepperModule","ɵmod","ɵinj","factory","imports","MatStepHeader_ng_container_3_Template","ctx_r0","iconOverrides","_getIconContext","MatStepHeader_ng_container_4_span_1_Template","ctx_r6","_getDefaultTextForState","MatStepHeader_ng_container_4_mat_icon_2_Template","ctx_r7","MatStepHeader_ng_container_4_Template","ctx_r1","MatStepHeader_ng_container_6_Template","ctx_r2","_templateLabel","MatStepHeader_div_7_Template","ctx_r3","MatStepHeader_div_8_Template","ctx_r4","_intl","optionalLabel","MatStepHeader_div_9_Template","ctx_r5","MatStep_ng_template_0_Template","MatHorizontalStepper_ng_container_1_div_2_Template","MatHorizontalStepper_ng_container_1_Template","_r8","$implicit","select","$event","_onKeydown","step_r2","i_r3","isLast_r4","last","_getFocusIndex","_getStepLabelId","_getIndicatorType","_iconOverrides","disableRipple","_getStepContentId","MatHorizontalStepper_div_3_Template","_r12","_animationDone","step_r9","i_r10","_getAnimationDirection","MatVerticalStepper_div_0_Template","_r6","step_r1","i_r2","isLast_r3","MatStepLabel","ɵMatStepLabel_BaseFactory","MatStepperIntl","ɵprov","token","providedIn","MAT_STEPPER_INTL_PROVIDER","provide","deps","useFactory","parentIntl","MatStepHeader","_focusMonitor","changeDetectorRef","super","monitor","_intlSubscription","unsubscribe","stopMonitoring","focusVia","active","consts","_getHostElement","_stringLabel","directives","styles","matStepperAnimations","horizontalStepTransition","transform","visibility","verticalStepTransition","height","MatStepperIcon","templateRef","name","MatStep","stepper","_errorStateMatcher","form","isErrorState","useExisting","MatStepper","arguments","animationDone","_icons","distinctUntilChanged","x","y","fromState","toState","ɵMatStepper_BaseFactory","MatHorizontalStepper","labelPosition","ɵMatHorizontalStepper_BaseFactory","data","animation","MatVerticalStepper","dir","elementRef","MatStepperNext","ɵMatStepperNext_BaseFactory","MatStepperPrevious","ɵMatStepperPrevious_BaseFactory","MatStepperModule","providers","SubscriptionStepperState","currentUser","plans","initialPlan$","BehaviorSubject","selectedPlan$","mode","isSubscribed","plan","children","getChildPlans","radioGroupModel","id","find","parent","filter","parent_id","hidden","LocalStorage","storage","localStorageAvailable","localStorage","key","defaultValue","JSON","parse","getItem","e","stringify","setItem","removeItem","PaypalSubscriptions","http","settings","subscriptions","i18n","popupWidth","popupHeight","popupParams","menubar","location","locationbar","toolbar","titlebar","status","scrollbars","width","subscriptionPending","executingAgreement","params","popup","openPaypalPopup","getBaseUrl","Promise","resolve","reject","rejectSubscribe","resolveSubscribe","createPaypalAgreement","response","listenForMessages","plan_id","href","urls","approve","errResponse","rejectSubscriptionPromise","subscription","cancel","delete","start_date","renews_at","then","user","planId","window","addEventListener","origin","executePaypalAgreement","finalize","resolveSubscriptionPromise","errorResponse","url","Object","assign","left","screen","top","newWindow","open","keys","map","join","interval","setInterval","closed","clearInterval","post","agreement_id","messages","general","close","loading$","Steps","Plans","Period","Payment","UpgradePageComponent","route","router","toast","paypalSubscriptions","setPlans","hydrateStateFromLocalStorage","storedState","get","initial","final","initialPlan","p","finalPlan","selectInitialPlan","selectPlanById","changePlan","set","navigate","remove","message","replacements","planName","getSelectedOrParentPlanName","activeSubscription","getSubscription","gateway","assignCurrent","selectedPlan","nextStep","BillingPlansResolver","all","order","perPage","pagination","catchError","navigateByUrl","mergeMap","AcceptedPaymentsHeaderComponent","el","acceptedCards","getJson","card","getAssetUrl","toLowerCase","PlanFeaturesListComponent","showCheckIcons","dense","UpgradePageAsideComponent","OrderSummaryComponent","CreditCardFormComponent","zone","lazyLoader","theme","created","submitButtonText","showSubmitButton","showOrderSummary","error$","stripeElements","resetForm","initStripe","destroyStripe","error","stripe","createToken","addCardToUser","stripeToken","addCard","err","loadAsset","Stripe","elements","isDarkMode","selectedTheme$","is_dark","field","create","classes","base","style","color","mount","on","onChange","bind","push","unmount","destroy","change","run","submitForm","CreateSubscriptionPanelComponent","paypal","selectedIndex$","loading","submitText","disablePaypalTab","startLoading","createOnStripe","getNewSubscriptionPayload","completeSubscription","confirmCardPayment","stopLoading","payment_intent_secret","result","action","onAction","finalizeOnStripe","reference","finalResponse","catch","payload","from","UserSubscriptionPageComponent","modal","activeSubscription$","onGracePeriod","ends_at","split","title","body","ok","afterClosed","confirmed","cancelSubscription","resume","setSubscription","request","share","updateUserAndSubscription","CurrenciesListResolver","valueLists","currencies","toPromise","UserSubscribedGuard","handle","InvoiceService","InvoiceIndexComponent","invoices","dataSource$","userId","invoice","uuid","PricingPageComponent","routes","path","component","allowIfSubscriptionForced","canActivate","RedirectToUpgradePage","listener","isLoggedIn","canActivateChild","BillingRoutingModule","forChild","SelectPlanPanelComponent","hasRecommendedPlan","recommended","setTimeout","SelectPlanPeriodPanelComponent","showSidebar","amount","getPlanPerMonthAmount","ceil","interval_count","UserNotSubscribedGuard","ContactWidgetComponent","BillingModule"],"mappings":"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","file":"x","sourcesContent":["import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER, HOME, END } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, TemplateRef, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, forwardRef, Optional, ContentChild, ViewChild, Input, EventEmitter, ChangeDetectorRef, ContentChildren, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/step-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nclass CdkStepHeader {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /**\n     * Focuses the step header.\n     * @return {?}\n     */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) { return new (t || CdkStepHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkStepHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepHeader, selectors: [[\"\", \"cdkStepHeader\", \"\"]], hostAttrs: [\"role\", \"tab\"] });\n/** @nocollapse */\nCdkStepHeader.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepHeader, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepHeader]',\n                host: {\n                    'role': 'tab'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkStepHeader.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/step-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkStepLabel {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) { return new (t || CdkStepLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepLabel, selectors: [[\"\", \"cdkStepLabel\", \"\"]] });\n/** @nocollapse */\nCdkStepLabel.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepLabel]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkStepLabel.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each stepper component.\n * @type {?}\n */\nlet nextId = 0;\n/**\n * Change event emitted on selection changes.\n */\nclass StepperSelectionEvent {\n}\nif (false) {\n    /**\n     * Index of the step now selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.selectedIndex;\n    /**\n     * Index of the step previously selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.previouslySelectedIndex;\n    /**\n     * The step instance now selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.selectedStep;\n    /**\n     * The step instance previously selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.previouslySelectedStep;\n}\n/**\n * Enum to represent the different states of the steps.\n * @type {?}\n */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error'\n};\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @type {?}\n */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * \\@breaking-change 8.0.0.\n * @type {?}\n */\nconst MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n/**\n * Configurable options for stepper.\n * @record\n */\nfunction StepperOptions() { }\nif (false) {\n    /**\n     * Whether the stepper should display an error state or not.\n     * Default behavior is assumed to be false.\n     * @type {?|undefined}\n     */\n    StepperOptions.prototype.showError;\n    /**\n     * Whether the stepper should display the default indicator type\n     * or not.\n     * Default behavior is assumed to be true.\n     * @type {?|undefined}\n     */\n    StepperOptions.prototype.displayDefaultIndicatorType;\n}\nclass CdkStep {\n    /**\n     * \\@breaking-change 8.0.0 remove the `?` after `stepperOptions`\n     * @param {?} _stepper\n     * @param {?=} stepperOptions\n     */\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /**\n         * Whether user has seen the expanded step content or not.\n         */\n        this.interacted = false;\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n        this._showError = !!this._stepperOptions.showError;\n    }\n    /**\n     * Whether the user can return to this step once it has been marked as completed.\n     * @return {?}\n     */\n    get editable() {\n        return this._editable;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the completion of step is optional.\n     * @return {?}\n     */\n    get optional() {\n        return this._optional;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether step is marked as completed.\n     * @return {?}\n     */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /**\n     * Whether step has an error.\n     * @return {?}\n     */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /**\n     * Selects this step component.\n     * @return {?}\n     */\n    select() {\n        this._stepper.selected = this;\n    }\n    /**\n     * Resets the step to its initial state. Note that this includes resetting form data.\n     * @return {?}\n     */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n}\nCdkStep.ɵfac = function CdkStep_Factory(t) { return new (t || CdkStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => CdkStepper))), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nCdkStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkStep, selectors: [[\"cdk-step\"]], contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepLabel, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, viewQuery: function CdkStep_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    } }, inputs: { editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\", stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\" }, exportAs: [\"cdkStep\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function CdkStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nCdkStep.ctorParameters = () => [\n    { type: CdkStepper, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => CdkStepper)),] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nCdkStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [CdkStepLabel,] }],\n    content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    stepControl: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    state: [{ type: Input }],\n    editable: [{ type: Input }],\n    optional: [{ type: Input }],\n    completed: [{ type: Input }],\n    hasError: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStep, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-step',\n                exportAs: 'cdkStep',\n                template: '<ng-template><ng-content></ng-content></ng-template>',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: CdkStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => CdkStepper))]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { editable: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], completed: [{\n            type: Input\n        }], hasError: [{\n            type: Input\n        }], stepLabel: [{\n            type: ContentChild,\n            args: [CdkStepLabel]\n        }], content: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], stepControl: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], state: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_editable;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_hasError;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_optional;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_completed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._stepperOptions;\n    /** @type {?} */\n    CdkStep.prototype._showError;\n    /** @type {?} */\n    CdkStep.prototype._displayDefaultIndicatorType;\n    /**\n     * Template for step label if it exists.\n     * @type {?}\n     */\n    CdkStep.prototype.stepLabel;\n    /**\n     * Template for step content.\n     * @type {?}\n     */\n    CdkStep.prototype.content;\n    /**\n     * The top level abstract control of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.stepControl;\n    /**\n     * Whether user has seen the expanded step content or not.\n     * @type {?}\n     */\n    CdkStep.prototype.interacted;\n    /**\n     * Plain text label of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.label;\n    /**\n     * Error message to display when there's an error.\n     * @type {?}\n     */\n    CdkStep.prototype.errorMessage;\n    /**\n     * Aria label for the tab.\n     * @type {?}\n     */\n    CdkStep.prototype.ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     * @type {?}\n     */\n    CdkStep.prototype.ariaLabelledby;\n    /**\n     * State of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._editable;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._optional;\n    /** @type {?} */\n    CdkStep.prototype._completedOverride;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._customError;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._stepper;\n}\nclass CdkStepper {\n    /**\n     * @param {?} _dir\n     * @param {?} _changeDetectorRef\n     * @param {?=} _elementRef\n     * @param {?=} _document\n     */\n    constructor(_dir, _changeDetectorRef, _elementRef, _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the selected step has changed.\n         */\n        this.selectionChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n        this._document = _document;\n    }\n    /**\n     * The list of step components that the stepper is holding.\n     * @return {?}\n     */\n    get steps() {\n        return this._steps;\n    }\n    /**\n     * Whether the validity of previous steps should be checked or not.\n     * @return {?}\n     */\n    get linear() {\n        return this._linear;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /**\n     * The index of the selected step.\n     * @return {?}\n     */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    set selectedIndex(index) {\n        /** @type {?} */\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps) {\n            // Ensure that the index can't be out of bounds.\n            if (newIndex < 0 || newIndex > this.steps.length - 1) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            if (this._selectedIndex != newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(index);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /**\n     * The step that is selected.\n     * @return {?}\n     */\n    get selected() {\n        // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : (/** @type {?} */ (undefined));\n    }\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n    set selected(step) {\n        this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._stepHeader)\n            .withWrap()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? ((/** @type {?} */ (this._dir.change))) : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} direction\n         * @return {?}\n         */\n        direction => this._keyManager.withHorizontalOrientation(direction)));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Selects and focuses the next step in list.\n     * @return {?}\n     */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /**\n     * Selects and focuses the previous step in list.\n     * @return {?}\n     */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /**\n     * Resets the stepper to its initial state. Note that this includes clearing form data.\n     * @return {?}\n     */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach((/**\n         * @param {?} step\n         * @return {?}\n         */\n        step => step.reset()));\n        this._stateChanged();\n    }\n    /**\n     * Returns a unique id for each step label element.\n     * @param {?} i\n     * @return {?}\n     */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns unique id for each step content element.\n     * @param {?} i\n     * @return {?}\n     */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Marks the component to be change detected.\n     * @return {?}\n     */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Returns position state of the step with the given index.\n     * @param {?} index\n     * @return {?}\n     */\n    _getAnimationDirection(index) {\n        /** @type {?} */\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /**\n     * Returns the type of icon to be displayed.\n     * @param {?} index\n     * @param {?=} state\n     * @return {?}\n     */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        /** @type {?} */\n        const step = this.steps.toArray()[index];\n        /** @type {?} */\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n            this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @return {?}\n     */\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @param {?=} state\n     * @return {?}\n     */\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /**\n     * Returns the index of the currently-focused step header.\n     * @return {?}\n     */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    /**\n     * @private\n     * @param {?} newIndex\n     * @return {?}\n     */\n    _updateSelectedItemIndex(newIndex) {\n        /** @type {?} */\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n            this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null && !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else if (keyCode === HOME) {\n            manager.setFirstItemActive();\n            event.preventDefault();\n        }\n        else if (keyCode === END) {\n            manager.setLastItemActive();\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _anyControlsInvalidOrPending(index) {\n        /** @type {?} */\n        const steps = this.steps.toArray();\n        steps[this._selectedIndex].interacted = true;\n        if (this._linear && index >= 0) {\n            return steps.slice(0, index).some((/**\n             * @param {?} step\n             * @return {?}\n             */\n            step => {\n                /** @type {?} */\n                const control = step.stepControl;\n                /** @type {?} */\n                const isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            }));\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Checks whether the stepper contains the focused element.\n     * @private\n     * @return {?}\n     */\n    _containsFocus() {\n        if (!this._document || !this._elementRef) {\n            return false;\n        }\n        /** @type {?} */\n        const stepperElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        const focusedElement = this._document.activeElement;\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n}\nCdkStepper.ɵfac = function CdkStepper_Factory(t) { return new (t || CdkStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepper, selectors: [[\"\", \"cdkStepper\", \"\"]], contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStep, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"cdkStepper\"] });\n/** @nocollapse */\nCdkStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkStepper.propDecorators = {\n    _steps: [{ type: ContentChildren, args: [CdkStep, { descendants: true },] }],\n    _stepHeader: [{ type: ContentChildren, args: [CdkStepHeader, { descendants: true },] }],\n    linear: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    selected: [{ type: Input }],\n    selectionChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepper, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepper]',\n                exportAs: 'cdkStepper'\n            }]\n    }], function () { return [{ type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], linear: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], _steps: [{\n            type: ContentChildren,\n            args: [CdkStep, { descendants: true }]\n        }], _stepHeader: [{\n            type: ContentChildren,\n            args: [CdkStepHeader, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_hasError;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_linear;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_selectedIndex;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @protected\n     */\n    CdkStepper.prototype._destroyed;\n    /**\n     * Used for managing keyboard focus.\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._keyManager;\n    /**\n     * \\@breaking-change 8.0.0 Remove `| undefined` once the `_document`\n     * constructor param is required.\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._document;\n    /**\n     * The list of step components that the stepper is holding.\n     * @deprecated use `steps` instead\n     * \\@breaking-change 9.0.0 remove this property\n     * @type {?}\n     */\n    CdkStepper.prototype._steps;\n    /**\n     * The list of step headers of the steps in the stepper.\n     * @deprecated Type to be changed to `QueryList<CdkStepHeader>`.\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    CdkStepper.prototype._stepHeader;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._linear;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._selectedIndex;\n    /**\n     * Event emitted when the selected step has changed.\n     * @type {?}\n     */\n    CdkStepper.prototype.selectionChange;\n    /**\n     * Used to track unique ID for each stepper component.\n     * @type {?}\n     */\n    CdkStepper.prototype._groupId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkStepper.prototype._orientation;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._elementRef;\n}\n/**\n * Simplified representation of an \"AbstractControl\" from \\@angular/forms.\n * Used to avoid having to bring in \\@angular/forms for a single optional interface.\n * \\@docs-private\n * @record\n */\nfunction AbstractControlLike() { }\nif (false) {\n    /** @type {?} */\n    AbstractControlLike.prototype.asyncValidator;\n    /** @type {?} */\n    AbstractControlLike.prototype.dirty;\n    /** @type {?} */\n    AbstractControlLike.prototype.disabled;\n    /** @type {?} */\n    AbstractControlLike.prototype.enabled;\n    /** @type {?} */\n    AbstractControlLike.prototype.errors;\n    /** @type {?} */\n    AbstractControlLike.prototype.invalid;\n    /** @type {?} */\n    AbstractControlLike.prototype.parent;\n    /** @type {?} */\n    AbstractControlLike.prototype.pending;\n    /** @type {?} */\n    AbstractControlLike.prototype.pristine;\n    /** @type {?} */\n    AbstractControlLike.prototype.root;\n    /** @type {?} */\n    AbstractControlLike.prototype.status;\n    /** @type {?} */\n    AbstractControlLike.prototype.statusChanges;\n    /** @type {?} */\n    AbstractControlLike.prototype.touched;\n    /** @type {?} */\n    AbstractControlLike.prototype.untouched;\n    /** @type {?} */\n    AbstractControlLike.prototype.updateOn;\n    /** @type {?} */\n    AbstractControlLike.prototype.valid;\n    /** @type {?} */\n    AbstractControlLike.prototype.validator;\n    /** @type {?} */\n    AbstractControlLike.prototype.value;\n    /** @type {?} */\n    AbstractControlLike.prototype.valueChanges;\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.clearAsyncValidators = function () { };\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.clearValidators = function () { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.disable = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.enable = function (opts) { };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.get = function (path) { };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.getError = function (errorCode, path) { };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.hasError = function (errorCode, path) { };\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAllAsTouched = function () { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsDirty = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsPending = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsPristine = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsTouched = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsUntouched = function (opts) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.patchValue = function (value, options) { };\n    /**\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.reset = function (value, options) { };\n    /**\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setAsyncValidators = function (newValidator) { };\n    /**\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setErrors = function (errors, opts) { };\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setParent = function (parent) { };\n    /**\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValidators = function (newValidator) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValue = function (value, options) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.updateValueAndValidity = function (opts) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.patchValue = function (value, options) { };\n    /**\n     * @param {?=} formState\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.reset = function (formState, options) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValue = function (value, options) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Button that moves to the next step in a stepper workflow.\n */\nclass CdkStepperNext {\n    /**\n     * @param {?} _stepper\n     */\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /**\n         * Type of the next button. Defaults to \"submit\" if not specified.\n         */\n        this.type = 'submit';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        this._stepper.next();\n    }\n}\nCdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) { return new (t || CdkStepperNext)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperNext, selectors: [[\"button\", \"cdkStepperNext\", \"\"]], hostVars: 1, hostBindings: function CdkStepperNext_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\n/** @nocollapse */\nCdkStepperNext.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperNext.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperNext]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\nif (false) {\n    /**\n     * Type of the next button. Defaults to \"submit\" if not specified.\n     * @type {?}\n     */\n    CdkStepperNext.prototype.type;\n    /** @type {?} */\n    CdkStepperNext.prototype._stepper;\n}\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\nclass CdkStepperPrevious {\n    /**\n     * @param {?} _stepper\n     */\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /**\n         * Type of the previous button. Defaults to \"button\" if not specified.\n         */\n        this.type = 'button';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        this._stepper.previous();\n    }\n}\nCdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) { return new (t || CdkStepperPrevious)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperPrevious, selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\n/** @nocollapse */\nCdkStepperPrevious.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperPrevious.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\nif (false) {\n    /**\n     * Type of the previous button. Defaults to \"button\" if not specified.\n     * @type {?}\n     */\n    CdkStepperPrevious.prototype.type;\n    /** @type {?} */\n    CdkStepperPrevious.prototype._stepper;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkStepperModule });\nCdkStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkStepperModule_Factory(t) { return new (t || CdkStepperModule)(); }, imports: [[BidiModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkStepperModule, { declarations: function () { return [CdkStep,\n        CdkStepper,\n        CdkStepHeader,\n        CdkStepLabel,\n        CdkStepperNext,\n        CdkStepperPrevious]; }, imports: function () { return [BidiModule]; }, exports: function () { return [CdkStep,\n        CdkStepper,\n        CdkStepHeader,\n        CdkStepLabel,\n        CdkStepperNext,\n        CdkStepperPrevious]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ],\n                declarations: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, MAT_STEPPER_GLOBAL_OPTIONS, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n\n//# sourceMappingURL=stepper.js.map","import { PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Directive, Injectable, ɵɵdefineInjectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Input, TemplateRef, Inject, forwardRef, ContentChild, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/step-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/material/icon';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nfunction MatStepHeader_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 9);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconOverrides[ctx_r0.state])(\"ngTemplateOutletContext\", ctx_r0._getIconContext());\n} }\nfunction MatStepHeader_ng_container_4_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6._getDefaultTextForState(ctx_r6.state));\n} }\nfunction MatStepHeader_ng_container_4_mat_icon_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7._getDefaultTextForState(ctx_r7.state));\n} }\nfunction MatStepHeader_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 10);\n    ɵngcc0.ɵɵtemplate(1, MatStepHeader_ng_container_4_span_1_Template, 2, 1, \"span\", 11);\n    ɵngcc0.ɵɵtemplate(2, MatStepHeader_ng_container_4_mat_icon_2_Template, 2, 1, \"mat-icon\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r1.state);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"number\");\n} }\nfunction MatStepHeader_ng_container_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 13);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2._templateLabel().template);\n} }\nfunction MatStepHeader_div_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.label);\n} }\nfunction MatStepHeader_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._intl.optionalLabel);\n} }\nfunction MatStepHeader_div_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.errorMessage);\n} }\nfunction MatStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatHorizontalStepper_ng_container_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 6);\n} }\nfunction MatHorizontalStepper_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_click_1_listener() { const step_r2 = ctx.$implicit; return step_r2.select(); })(\"keydown\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(2, MatHorizontalStepper_ng_container_1_div_2_Template, 1, 0, \"div\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const step_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const isLast_r4 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() === i_r3 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r3))(\"index\", i_r3)(\"state\", ctx_r0._getIndicatorType(i_r3, step_r2.state))(\"label\", step_r2.stepLabel || step_r2.label)(\"selected\", ctx_r0.selectedIndex === i_r3)(\"active\", step_r2.completed || ctx_r0.selectedIndex === i_r3 || !ctx_r0.linear)(\"optional\", step_r2.optional)(\"errorMessage\", step_r2.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r3 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r3))(\"aria-selected\", ctx_r0.selectedIndex == i_r3)(\"aria-label\", step_r2.ariaLabel || null)(\"aria-labelledby\", !step_r2.ariaLabel && step_r2.ariaLabelledby ? step_r2.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !isLast_r4);\n} }\nfunction MatHorizontalStepper_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatHorizontalStepper_div_3_Template_div_animation_stepTransition_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11._animationDone.next($event); });\n    ɵngcc0.ɵɵelementContainer(1, 8);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r1._getAnimationDirection(i_r10))(\"id\", ctx_r1._getStepContentId(i_r10));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r1.selectedIndex === i_r10 ? 0 : null)(\"aria-labelledby\", ctx_r1._getStepLabelId(i_r10))(\"aria-expanded\", ctx_r1.selectedIndex === i_r10);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r9.content);\n} }\nfunction MatVerticalStepper_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatVerticalStepper_div_0_Template_mat_step_header_click_1_listener() { const step_r1 = ctx.$implicit; return step_r1.select(); })(\"keydown\", function MatVerticalStepper_div_0_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatVerticalStepper_div_0_Template_div_animation_stepTransition_done_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._animationDone.next($event); });\n    ɵngcc0.ɵɵelementStart(4, \"div\", 5);\n    ɵngcc0.ɵɵelementContainer(5, 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const isLast_r3 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() == i_r2 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r2))(\"index\", i_r2)(\"state\", ctx_r0._getIndicatorType(i_r2, step_r1.state))(\"label\", step_r1.stepLabel || step_r1.label)(\"selected\", ctx_r0.selectedIndex === i_r2)(\"active\", step_r1.completed || ctx_r0.selectedIndex === i_r2 || !ctx_r0.linear)(\"optional\", step_r1.optional)(\"errorMessage\", step_r1.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r2 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r2))(\"aria-selected\", ctx_r0.selectedIndex === i_r2)(\"aria-label\", step_r1.ariaLabel || null)(\"aria-labelledby\", !step_r1.ariaLabel && step_r1.ariaLabelledby ? step_r1.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-stepper-vertical-line\", !isLast_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r0._getAnimationDirection(i_r2))(\"id\", ctx_r0._getStepContentId(i_r2));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r0.selectedIndex === i_r2 ? 0 : null)(\"aria-labelledby\", ctx_r0._getStepLabelId(i_r2))(\"aria-expanded\", ctx_r0.selectedIndex === i_r2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r1.content);\n} }\nclass MatStepLabel extends CdkStepLabel {\n}\nMatStepLabel.ɵfac = function MatStepLabel_Factory(t) { return ɵMatStepLabel_BaseFactory(t || MatStepLabel); };\nMatStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepLabel, selectors: [[\"\", \"matStepLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[matStepLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Stepper data that is required for internationalization.\n */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * Label that is rendered below optional steps.\n         */\n        this.optionalLabel = 'Optional';\n    }\n}\nMatStepperIntl.ɵfac = function MatStepperIntl_Factory(t) { return new (t || MatStepperIntl)(); };\n/** @nocollapse */ MatStepperIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatStepperIntl_Factory() { return new MatStepperIntl(); }, token: MatStepperIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatStepperIntl.prototype.changes;\n    /**\n     * Label that is rendered below optional steps.\n     * @type {?}\n     */\n    MatStepperIntl.prototype.optionalLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/step-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStepHeader extends CdkStepHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} _focusMonitor\n     * @param {?} _elementRef\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        _focusMonitor.monitor(_elementRef, true);\n        this._intlSubscription = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => changeDetectorRef.markForCheck()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the step header.\n     * @return {?}\n     */\n    focus() {\n        this._focusMonitor.focusVia(this._elementRef, 'program');\n    }\n    /**\n     * Returns string label of given step if it is a text label.\n     * @return {?}\n     */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /**\n     * Returns MatStepLabel if the label of given step is a template label.\n     * @return {?}\n     */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /**\n     * Returns the host HTML element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Template context variables that are exposed to the `matStepperIcon` instances.\n     * @return {?}\n     */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional\n        };\n    }\n    /**\n     * @param {?} state\n     * @return {?}\n     */\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n}\nMatStepHeader.ɵfac = function MatStepHeader_Factory(t) { return new (t || MatStepHeader)(ɵngcc0.ɵɵdirectiveInject(MatStepperIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatStepHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatStepHeader, selectors: [[\"mat-step-header\"]], hostAttrs: [\"role\", \"tab\", 1, \"mat-step-header\", \"mat-focus-indicator\"], inputs: { state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 19, consts: [[\"matRipple\", \"\", 1, \"mat-step-header-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-step-icon-content\", 3, \"ngSwitch\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngSwitchCase\"], [3, \"ngSwitch\", 4, \"ngSwitchDefault\"], [1, \"mat-step-label\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [\"class\", \"mat-step-text-label\", 4, \"ngIf\"], [\"class\", \"mat-step-optional\", 4, \"ngIf\"], [\"class\", \"mat-step-sub-label-error\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"ngTemplateOutlet\"], [1, \"mat-step-text-label\"], [1, \"mat-step-optional\"], [1, \"mat-step-sub-label-error\"]], template: function MatStepHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\");\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, MatStepHeader_ng_container_3_Template, 1, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatStepHeader_ng_container_4_Template, 3, 2, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n        ɵngcc0.ɵɵtemplate(6, MatStepHeader_ng_container_6_Template, 1, 1, \"ng-container\", 5);\n        ɵngcc0.ɵɵtemplate(7, MatStepHeader_div_7_Template, 2, 1, \"div\", 6);\n        ɵngcc0.ɵɵtemplate(8, MatStepHeader_div_8_Template, 2, 1, \"div\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatStepHeader_div_9_Template, 2, 1, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"mat-step-icon-state-\", ctx.state, \" mat-step-icon\");\n        ɵngcc0.ɵɵclassProp(\"mat-step-icon-selected\", ctx.selected);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", !!(ctx.iconOverrides && ctx.iconOverrides[ctx.state]));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-step-label-active\", ctx.active)(\"mat-step-label-selected\", ctx.selected)(\"mat-step-label-error\", ctx.state == \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._templateLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._stringLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.optional && ctx.state != \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.state == \"error\");\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgSwitchDefault, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet, ɵngcc4.MatIcon], styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatStepHeader.ctorParameters = () => [\n    { type: MatStepperIntl },\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nMatStepHeader.propDecorators = {\n    state: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    iconOverrides: [{ type: Input }],\n    index: [{ type: Input }],\n    selected: [{ type: Input }],\n    active: [{ type: Input }],\n    optional: [{ type: Input }],\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step-header',\n                template: \"<div class=\\\"mat-step-header-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <mat-icon *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <ng-container *ngIf=\\\"_templateLabel()\\\" [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\">\\n  </ng-container>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\",\n                host: {\n                    'class': 'mat-step-header mat-focus-indicator',\n                    'role': 'tab'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: MatStepperIntl }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { state: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], iconOverrides: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], active: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStepHeader.prototype._intlSubscription;\n    /**\n     * State of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.state;\n    /**\n     * Label of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.label;\n    /**\n     * Error message to display when there's an error.\n     * @type {?}\n     */\n    MatStepHeader.prototype.errorMessage;\n    /**\n     * Overrides for the header icons, passed in via the stepper.\n     * @type {?}\n     */\n    MatStepHeader.prototype.iconOverrides;\n    /**\n     * Index of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.index;\n    /**\n     * Whether the given step is selected.\n     * @type {?}\n     */\n    MatStepHeader.prototype.selected;\n    /**\n     * Whether the given step label is active.\n     * @type {?}\n     */\n    MatStepHeader.prototype.active;\n    /**\n     * Whether the given step is optional.\n     * @type {?}\n     */\n    MatStepHeader.prototype.optional;\n    /**\n     * Whether the ripple should be disabled.\n     * @type {?}\n     */\n    MatStepHeader.prototype.disableRipple;\n    /** @type {?} */\n    MatStepHeader.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStepHeader.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material steppers.\n * \\@docs-private\n * @type {?}\n */\nconst matStepperAnimations = {\n    /**\n     * Animation that transitions the step along the X axis in a horizontal stepper.\n     */\n    horizontalStepTransition: trigger('stepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        state('current', style({ transform: 'none', visibility: 'visible' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n    ]),\n    /**\n     * Animation that transitions the step along the Y axis in a vertical stepper.\n     */\n    verticalStepTransition: trigger('stepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        state('current', style({ height: '*', visibility: 'visible' })),\n        transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Template context available to an attached `matStepperIcon`.\n * @record\n */\nfunction MatStepperIconContext() { }\nif (false) {\n    /**\n     * Index of the step.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.index;\n    /**\n     * Whether the step is currently active.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.active;\n    /**\n     * Whether the step is optional.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.optional;\n}\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nMatStepperIcon.ɵfac = function MatStepperIcon_Factory(t) { return new (t || MatStepperIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatStepperIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperIcon, selectors: [[\"ng-template\", \"matStepperIcon\", \"\"]], inputs: { name: [\"matStepperIcon\", \"name\"] } });\n/** @nocollapse */\nMatStepperIcon.ctorParameters = () => [\n    { type: TemplateRef }\n];\nMatStepperIcon.propDecorators = {\n    name: [{ type: Input, args: ['matStepperIcon',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matStepperIcon]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { name: [{\n            type: Input,\n            args: ['matStepperIcon']\n        }] }); })();\nif (false) {\n    /**\n     * Name of the icon to be overridden.\n     * @type {?}\n     */\n    MatStepperIcon.prototype.name;\n    /** @type {?} */\n    MatStepperIcon.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStep extends CdkStep {\n    /**\n     * \\@breaking-change 8.0.0 remove the `?` after `stepperOptions`\n     * @param {?} stepper\n     * @param {?} _errorStateMatcher\n     * @param {?=} stepperOptions\n     */\n    constructor(stepper, _errorStateMatcher, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n    }\n    /**\n     * Custom error state matcher that additionally checks for validity of interacted form.\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        /** @type {?} */\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        /** @type {?} */\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n}\nMatStep.ɵfac = function MatStep_Factory(t) { return new (t || MatStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatStepper))), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher, 4), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nMatStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatStep, selectors: [[\"mat-step\"]], contentQueries: function MatStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepLabel, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, exportAs: [\"matStep\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatStep.ctorParameters = () => [\n    { type: MatStepper, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatStepper)),] }] },\n    { type: ErrorStateMatcher, decorators: [{ type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nMatStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [MatStepLabel,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStep, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\\n\",\n                providers: [\n                    { provide: ErrorStateMatcher, useExisting: MatStep },\n                    { provide: CdkStep, useExisting: MatStep },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matStep',\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatStepper))]\n            }] }, { type: ɵngcc2.ErrorStateMatcher, decorators: [{\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { stepLabel: [{\n            type: ContentChild,\n            args: [MatStepLabel]\n        }] }); })();\nif (false) {\n    /**\n     * Content for step label given by `<ng-template matStepLabel>`.\n     * @type {?}\n     */\n    MatStep.prototype.stepLabel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStep.prototype._errorStateMatcher;\n}\nclass MatStepper extends CdkStepper {\n    constructor() {\n        super(...arguments);\n        /**\n         * Event emitted when the current step is done transitioning in.\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Consumer-specified template-refs to be used to override the header icons.\n         */\n        this._iconOverrides = {};\n        /**\n         * Stream of animation `done` events when the body expands/collapses.\n         */\n        this._animationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._icons.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ name, templateRef }) => this._iconOverrides[name] = templateRef));\n        // Mark the component for change detection whenever the content children query changes\n        this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._stateChanged();\n        }));\n        this._animationDone.pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => x.fromState === y.fromState && x.toState === y.toState)), takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (((/** @type {?} */ (event.toState))) === 'current') {\n                this.animationDone.emit();\n            }\n        }));\n    }\n}\nMatStepper.ɵfac = function MatStepper_Factory(t) { return ɵMatStepper_BaseFactory(t || MatStepper); };\nMatStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepper, selectors: [[\"\", \"matStepper\", \"\"]], contentQueries: function MatStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStep, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepperIcon, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icons = _t);\n    } }, viewQuery: function MatStepper_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatStepHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { disableRipple: \"disableRipple\" }, outputs: { animationDone: \"animationDone\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkStepper, useExisting: MatStepper }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatStepper.propDecorators = {\n    _stepHeader: [{ type: ViewChildren, args: [MatStepHeader,] }],\n    _steps: [{ type: ContentChildren, args: [MatStep, { descendants: true },] }],\n    _icons: [{ type: ContentChildren, args: [MatStepperIcon, { descendants: true },] }],\n    animationDone: [{ type: Output }],\n    disableRipple: [{ type: Input }]\n};\nconst ɵMatStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepper);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepper, [{\n        type: Directive,\n        args: [{ selector: '[matStepper]', providers: [{ provide: CdkStepper, useExisting: MatStepper }] }]\n    }], null, { animationDone: [{\n            type: Output\n        }], _stepHeader: [{\n            type: ViewChildren,\n            args: [MatStepHeader]\n        }], _steps: [{\n            type: ContentChildren,\n            args: [MatStep, { descendants: true }]\n        }], _icons: [{\n            type: ContentChildren,\n            args: [MatStepperIcon, { descendants: true }]\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_hasError;\n    /**\n     * The list of step headers of the steps in the stepper.\n     * @type {?}\n     */\n    MatStepper.prototype._stepHeader;\n    /**\n     * Steps that the stepper holds.\n     * @type {?}\n     */\n    MatStepper.prototype._steps;\n    /**\n     * Custom icon overrides passed in by the consumer.\n     * @type {?}\n     */\n    MatStepper.prototype._icons;\n    /**\n     * Event emitted when the current step is done transitioning in.\n     * @type {?}\n     */\n    MatStepper.prototype.animationDone;\n    /**\n     * Whether ripples should be disabled for the step headers.\n     * @type {?}\n     */\n    MatStepper.prototype.disableRipple;\n    /**\n     * Consumer-specified template-refs to be used to override the header icons.\n     * @type {?}\n     */\n    MatStepper.prototype._iconOverrides;\n    /**\n     * Stream of animation `done` events when the body expands/collapses.\n     * @type {?}\n     */\n    MatStepper.prototype._animationDone;\n}\nclass MatHorizontalStepper extends MatStepper {\n    constructor() {\n        super(...arguments);\n        /**\n         * Whether the label should display in bottom or end position.\n         */\n        this.labelPosition = 'end';\n    }\n}\nMatHorizontalStepper.ɵfac = function MatHorizontalStepper_Factory(t) { return ɵMatHorizontalStepper_BaseFactory(t || MatHorizontalStepper); };\nMatHorizontalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHorizontalStepper, selectors: [[\"mat-horizontal-stepper\"]], hostAttrs: [\"aria-orientation\", \"horizontal\", \"role\", \"tablist\", 1, \"mat-stepper-horizontal\"], hostVars: 4, hostBindings: function MatHorizontalStepper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-stepper-label-position-end\", ctx.labelPosition == \"end\")(\"mat-stepper-label-position-bottom\", ctx.labelPosition == \"bottom\");\n    } }, inputs: { selectedIndex: \"selectedIndex\", labelPosition: \"labelPosition\" }, exportAs: [\"matHorizontalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatHorizontalStepper },\n            { provide: CdkStepper, useExisting: MatHorizontalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 2, consts: [[1, \"mat-horizontal-stepper-header-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-content-container\"], [\"class\", \"mat-horizontal-stepper-content\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [\"class\", \"mat-stepper-horizontal-line\", 4, \"ngIf\"], [1, \"mat-stepper-horizontal-line\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\"], [3, \"ngTemplateOutlet\"]], template: function MatHorizontalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatHorizontalStepper_ng_container_1_Template, 3, 18, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatHorizontalStepper_div_3_Template, 2, 6, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet], styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], encapsulation: 2, data: { animation: [matStepperAnimations.horizontalStepTransition] }, changeDetection: 0 });\nMatHorizontalStepper.propDecorators = {\n    labelPosition: [{ type: Input }]\n};\nconst ɵMatHorizontalStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHorizontalStepper);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHorizontalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-horizontal-stepper',\n                exportAs: 'matHorizontalStepper',\n                template: \"<div class=\\\"mat-horizontal-stepper-header-container\\\">\\n  <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n    <mat-step-header class=\\\"mat-horizontal-stepper-header\\\"\\n                     (click)=\\\"step.select()\\\"\\n                     (keydown)=\\\"_onKeydown($event)\\\"\\n                     [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n                     [id]=\\\"_getStepLabelId(i)\\\"\\n                     [attr.aria-posinset]=\\\"i + 1\\\"\\n                     [attr.aria-setsize]=\\\"steps.length\\\"\\n                     [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                     [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n                     [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                     [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                     [index]=\\\"i\\\"\\n                     [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                     [label]=\\\"step.stepLabel || step.label\\\"\\n                     [selected]=\\\"selectedIndex === i\\\"\\n                     [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                     [optional]=\\\"step.optional\\\"\\n                     [errorMessage]=\\\"step.errorMessage\\\"\\n                     [iconOverrides]=\\\"_iconOverrides\\\"\\n                     [disableRipple]=\\\"disableRipple\\\">\\n    </mat-step-header>\\n    <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n  </ng-container>\\n</div>\\n\\n<div class=\\\"mat-horizontal-content-container\\\">\\n  <div *ngFor=\\\"let step of steps; let i = index\\\"\\n       [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n       class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n       [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n       (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n       [id]=\\\"_getStepContentId(i)\\\"\\n       [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n       [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-horizontal',\n                    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n                    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n                    'aria-orientation': 'horizontal',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.horizontalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatHorizontalStepper },\n                    { provide: CdkStepper, useExisting: MatHorizontalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], null, { labelPosition: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_hasError;\n    /**\n     * Whether the label should display in bottom or end position.\n     * @type {?}\n     */\n    MatHorizontalStepper.prototype.labelPosition;\n}\nclass MatVerticalStepper extends MatStepper {\n    /**\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     * @param {?=} elementRef\n     * @param {?=} _document\n     */\n    constructor(dir, changeDetectorRef, \n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef, _document) {\n        super(dir, changeDetectorRef, elementRef, _document);\n        this._orientation = 'vertical';\n    }\n}\nMatVerticalStepper.ɵfac = function MatVerticalStepper_Factory(t) { return new (t || MatVerticalStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatVerticalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatVerticalStepper, selectors: [[\"mat-vertical-stepper\"]], hostAttrs: [\"aria-orientation\", \"vertical\", \"role\", \"tablist\", 1, \"mat-stepper-vertical\"], inputs: { selectedIndex: \"selectedIndex\" }, exportAs: [\"matVerticalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatVerticalStepper },\n            { provide: CdkStepper, useExisting: MatVerticalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[\"class\", \"mat-step\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-step\"], [1, \"mat-vertical-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [1, \"mat-vertical-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-vertical-stepper-content\", 3, \"id\"], [1, \"mat-vertical-content\"], [3, \"ngTemplateOutlet\"]], template: function MatVerticalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatVerticalStepper_div_0_Template, 6, 25, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgTemplateOutlet], styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], encapsulation: 2, data: { animation: [matStepperAnimations.verticalStepTransition] }, changeDetection: 0 });\n/** @nocollapse */\nMatVerticalStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatVerticalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-vertical-stepper',\n                exportAs: 'matVerticalStepper',\n                template: \"<div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n  <mat-step-header class=\\\"mat-vertical-stepper-header\\\"\\n                   (click)=\\\"step.select()\\\"\\n                   (keydown)=\\\"_onKeydown($event)\\\"\\n                   [tabIndex]=\\\"_getFocusIndex() == i ? 0 : -1\\\"\\n                   [id]=\\\"_getStepLabelId(i)\\\"\\n                   [attr.aria-posinset]=\\\"i + 1\\\"\\n                   [attr.aria-setsize]=\\\"steps.length\\\"\\n                   [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                   [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n                   [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                   [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                   [index]=\\\"i\\\"\\n                   [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                   [label]=\\\"step.stepLabel || step.label\\\"\\n                   [selected]=\\\"selectedIndex === i\\\"\\n                   [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                   [optional]=\\\"step.optional\\\"\\n                   [errorMessage]=\\\"step.errorMessage\\\"\\n                   [iconOverrides]=\\\"_iconOverrides\\\"\\n                   [disableRipple]=\\\"disableRipple\\\">\\n  </mat-step-header>\\n\\n  <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n    <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n         [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n         [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n         (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n         [id]=\\\"_getStepContentId(i)\\\"\\n         [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n         [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n      <div class=\\\"mat-vertical-content\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-vertical',\n                    'aria-orientation': 'vertical',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.verticalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatVerticalStepper },\n                    { provide: CdkStepper, useExisting: MatVerticalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_hasError;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Button that moves to the next step in a stepper workflow.\n */\nclass MatStepperNext extends CdkStepperNext {\n}\nMatStepperNext.ɵfac = function MatStepperNext_Factory(t) { return ɵMatStepperNext_BaseFactory(t || MatStepperNext); };\nMatStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperNext, selectors: [[\"button\", \"matStepperNext\", \"\"]], hostVars: 1, hostBindings: function MatStepperNext_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepperNext_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperNext);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperNext]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\nclass MatStepperPrevious extends CdkStepperPrevious {\n}\nMatStepperPrevious.ɵfac = function MatStepperPrevious_Factory(t) { return ɵMatStepperPrevious_BaseFactory(t || MatStepperPrevious); };\nMatStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperPrevious, selectors: [[\"button\", \"matStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function MatStepperPrevious_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepperPrevious_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperPrevious);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStepperModule {\n}\nMatStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatStepperModule });\nMatStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatStepperModule_Factory(t) { return new (t || MatStepperModule)(); }, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [[\n            MatCommonModule,\n            CommonModule,\n            PortalModule,\n            MatButtonModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatStepperModule, { declarations: function () { return [MatHorizontalStepper,\n        MatVerticalStepper,\n        MatStep,\n        MatStepLabel,\n        MatStepper,\n        MatStepperNext,\n        MatStepperPrevious,\n        MatStepHeader,\n        MatStepperIcon]; }, imports: function () { return [MatCommonModule,\n        CommonModule,\n        PortalModule,\n        MatButtonModule,\n        CdkStepperModule,\n        MatIconModule,\n        MatRippleModule]; }, exports: function () { return [MatCommonModule,\n        MatHorizontalStepper,\n        MatVerticalStepper,\n        MatStep,\n        MatStepLabel,\n        MatStepper,\n        MatStepperNext,\n        MatStepperPrevious,\n        MatStepHeader,\n        MatStepperIcon]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatCommonModule,\n                    CommonModule,\n                    PortalModule,\n                    MatButtonModule,\n                    CdkStepperModule,\n                    MatIconModule,\n                    MatRippleModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                declarations: [\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatHorizontalStepper, MatStep, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, MatVerticalStepper, matStepperAnimations };\n\n//# sourceMappingURL=stepper.js.map","import {Injectable} from '@angular/core';\nimport {Plan} from '@common/core/types/models/Plan';\nimport {BehaviorSubject} from 'rxjs';\nimport { CurrentUser } from '@common/auth/current-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SubscriptionStepperState {\n    public mode: 'pricing'|'subscribe'|'changePlan';\n\n    /**\n     * Stripe.js instance.\n     */\n    public stripe: stripe.Stripe;\n\n    /**\n     * All available plans.\n     */\n    public plans: Plan[] = [];\n\n    /**\n     * Model for plan period radio group.\n     */\n    public radioGroupModel: number;\n\n    /**\n     * Base plan, selected in the first step.\n     */\n    public initialPlan$ = new BehaviorSubject<Plan>(null);\n\n    /**\n     * Final billing plan user has selected (base or yearly alternative)\n     */\n    public selectedPlan$ = new BehaviorSubject<Plan>(null);\n\n    constructor(private currentUser: CurrentUser) {\n        this.mode = this.currentUser.isSubscribed() ? 'changePlan' : 'subscribe';\n    }\n\n    /**\n     * Select initial \"base\" plan.\n     */\n    public selectInitialPlan(plan: Plan) {\n        this.initialPlan$.next(plan);\n\n        const children = this.getChildPlans(plan);\n\n        if (children && children[0]) {\n            this.radioGroupModel = children[0].id;\n            this.selectedPlan$.next(children[0]);\n        } else {\n            this.selectedPlan$.next(plan);\n            this.radioGroupModel = plan.id;\n        }\n    }\n\n    /**\n     * Select plan by specified ID.\n     */\n    public selectPlanById(id: number) {\n        this.selectedPlan$.next(this.plans.find(plan => plan.id === id));\n    }\n\n    /**\n     * Get different versions of specified plan.\n     * (yearly, weekly, every 2 years etc)\n     */\n    public getChildPlans(parent: Plan) {\n        return this.plans.filter(plan => plan.parent_id === parent.id && !plan.hidden);\n    }\n\n    /**\n     * Set all available plans.\n     */\n    public setPlans(plans: Plan[]) {\n        this.plans = plans;\n    }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LocalStorage {\n    private readonly storage;\n\n    constructor() {\n        if (this.localStorageAvailable()) {\n            this.storage = localStorage;\n        } else {\n            this.storage = null;\n        }\n    }\n\n    /**\n     * Retrieve specified item from local storage.\n     */\n    public get<T>(key: string, defaultValue?: T): any|T {\n        if ( ! this.storage) return defaultValue;\n\n        let value;\n        try {\n            value = JSON.parse(this.storage.getItem(key));\n        } catch (e) {\n            //\n        }\n\n        return value == null ? defaultValue : value;\n    }\n\n    /**\n     * Store specified item in local storage.\n     */\n    public set(key: string, value: any) {\n        if ( ! this.storage) return null;\n        value = JSON.stringify(value);\n        this.storage.setItem(key, value);\n    }\n\n    /**\n     * Remove specified item from local storage.\n     */\n    public remove(key: string) {\n        if ( ! this.storage) return null;\n        this.storage.removeItem(key);\n    }\n\n    /**\n     * Check if local storage is available.\n     */\n    public localStorageAvailable(): boolean {\n        const test = 'test';\n\n        try {\n            localStorage.setItem(test, test);\n            localStorage.removeItem(test);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {AppHttpClient} from '../../core/http/app-http-client.service';\nimport {Settings} from '../../core/config/settings.service';\nimport {User} from '../../core/types/models/User';\nimport { finalize } from 'rxjs/operators';\nimport { Subscriptions } from '../../shared/billing/subscriptions.service';\nimport { Subscription } from '../../shared/billing/models/subscription';\nimport {Plan} from '@common/core/types/models/Plan';\nimport { Translations } from '@common/core/translations/translations.service';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PaypalSubscriptions {\n    private popupWidth = 450;\n    private popupHeight = 650;\n\n    /**\n     * Params for popup window.\n     */\n    private popupParams = {\n        menubar: 0,\n        location: 0,\n        locationbar: 0,\n        toolbar: 0,\n        titlebar: 0,\n        status: 0,\n        scrollbars: 1,\n        width: this.popupWidth,\n        height: this.popupHeight\n    };\n\n    // TODO: clean this up with rxjs or checkout.js\n    private resolveSubscribe: Function;\n    private rejectSubscribe: Function;\n    private subscriptionPending = false;\n    private executingAgreement = false;\n    private popup: Window;\n\n    constructor(\n        private http: AppHttpClient,\n        private settings: Settings,\n        private subscriptions: Subscriptions,\n        private i18n: Translations,\n    ) {}\n\n    /**\n     * Subscribe to specified plan on paypal.\n     */\n    public subscribe(params: {plan_id: number, start_date?: string}): Promise<User> {\n        this.subscriptionPending = true;\n\n        this.popup = this.openPaypalPopup(this.settings.getBaseUrl(true) + 'billing/paypal/loading');\n\n        return new Promise((resolve, reject) => {\n            this.rejectSubscribe = reject;\n            this.resolveSubscribe = resolve;\n\n            this.createPaypalAgreement(params).subscribe(response => {\n                this.listenForMessages(params.plan_id);\n                this.popup.location.href = response.urls.approve;\n            }, errResponse => this.rejectSubscriptionPromise(errResponse));\n        });\n    }\n\n    /**\n     * Change plan of subscription to specified one.\n     */\n    public changePlan(subscription: Subscription, plan: Plan): Promise<User> {\n        return new Promise(resolve => {\n            this.subscriptions.cancel(subscription.id, {delete: true}).subscribe(() => {\n                this.subscribe({plan_id: plan.id, start_date: subscription.renews_at}).then(user => resolve(user));\n            });\n        });\n    }\n\n    /**\n     * Listen for messages from paypal window and execute paypal agreement.\n     */\n    private listenForMessages(planId: number) {\n        window.addEventListener('message', e => {\n            if (this.settings.getBaseUrl().indexOf(e.origin) === -1) return;\n\n            // user cancelled payment on paypal popup manually\n            if (e.data.status !== 'success') {\n                return this.rejectSubscriptionPromise();\n            }\n\n            // user approved payment\n            this.executingAgreement = true;\n            this.executePaypalAgreement(e.data.token, planId)\n                .pipe(finalize(() => this.executingAgreement = false))\n                .subscribe(\n                    response => this.resolveSubscriptionPromise(response.user),\n                    errorResponse => this.rejectSubscriptionPromise(),\n                );\n        }, false);\n    }\n\n    /**\n     * Open new paypal express popup window.\n     */\n    private openPaypalPopup(url: string) {\n        const params = Object.assign({}, this.popupParams, {\n            left: (screen.width / 2) - (this.popupWidth / 2),\n            top: (screen.height / 2) - (this.popupHeight / 2)\n        });\n\n        const newWindow = window.open(\n            url,\n            'PayPal',\n            Object.keys(params).map(key => key + '=' + params[key]).join(', '),\n        );\n\n        const interval = setInterval(() => {\n            if (newWindow == null || newWindow.closed) {\n                window.clearInterval(interval);\n\n                if (this.subscriptionPending && ! this.executingAgreement) {\n                    this.rejectSubscriptionPromise();\n                }\n            }\n        }, 1000);\n\n        return newWindow;\n    }\n\n    private createPaypalAgreement(params: {plan_id: number, start_date?: string}): Observable<{urls: {execute: string, approve: string}}> {\n        return this.http.post('billing/subscriptions/paypal/agreement/create', {plan_id: params.plan_id, start_date: params.start_date});\n    }\n\n    private executePaypalAgreement(agreement_id: string, plan_id: number): Observable<{user: User}> {\n        return this.http.post('billing/subscriptions/paypal/agreement/execute', {agreement_id, plan_id});\n    }\n\n    /**\n     * Reject subscription promise.\n     */\n    private rejectSubscriptionPromise(errResponse?: BackendErrorResponse) {\n        this.rejectSubscribe(this.i18n.t(errResponse?.messages?.general || 'Payment failed. Please try again later.'));\n        this.subscriptionPending = false;\n        this.popup && this.popup.close();\n    }\n\n    /**\n     * Resolve subscription promise.\n     */\n    private resolveSubscriptionPromise(user: User) {\n        this.resolveSubscribe(user);\n        this.subscriptionPending = false;\n    }\n}\n","<material-navbar [hideRegisterButton]=\"state.mode === 'pricing'\"></material-navbar>\n\n<div class=\"bg-wrapper\">\n    <mat-horizontal-stepper class=\"container main-content\" [linear]=\"true\">\n        <ng-template matStepperIcon=\"edit\">\n            <mat-icon svgIcon=\"edit\" class=\"size-16\"></mat-icon>\n        </ng-template>\n\n        <mat-step [label]=\"'Subscription plan' | trans\" [completed]=\"!!(state.initialPlan$ | async)\">\n            <select-plan-panel (selected)=\"nextStep()\"></select-plan-panel>\n            <contact-widget></contact-widget>\n        </mat-step>\n\n        <mat-step [label]=\"'Subscription interval' | trans\" [completed]=\"!!(state.selectedPlan$ | async)\">\n            <select-plan-period-panel [showSidebar]=\"true\" (selected)=\"nextStep()\"></select-plan-period-panel>\n        </mat-step>\n\n        <mat-step [label]=\"'Payment' | trans\" [completed]=\"false\" *ngIf=\"state.mode === 'subscribe'\">\n            <div class=\"step-container payment-step\">\n                <div class=\"left-col\">\n                    <create-subscription-panel [plan]=\"state.selectedPlan$ | async\" (loading)=\"loading$.next($event)\" (completed)=\"onCompleted()\"></create-subscription-panel>\n                </div>\n\n                <upgrade-page-aside [plan]=\"state.selectedPlan$ | async\" class=\"right-col\"></upgrade-page-aside>\n            </div>\n\n            <p\n                class=\"legal-info\" *ngIf=\"state.selectedPlan$ | async as plan\"\n                trans\n                [transValues]=\"{\n                    siteName: settings.get('branding.site_name'),\n                    intervalCount: plan.interval_count > 1 ? plan.interval_count : '',\n                    intervalName: plan.interval_count > 1 ? plan.interval + 's' : plan.interval\n                }\">\n                You authorise :siteName to charge you automatically every :intervalCount :intervalName, until you cancel your subscription. You consent to get access to your :siteName subscription immediately, and acknowledge that refunds are only available within 14 days and provided you haven't accessed :siteName. You will be able to cancel your subscription at any time from your profile page.\n            </p>\n        </mat-step>\n    </mat-horizontal-stepper>\n</div>\n\n<loading-indicator class=\"overlay\" [isVisible]=\"loading$ | async\"></loading-indicator>\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatStepper } from '@angular/material/stepper';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SubscriptionStepperState } from '../subscriptions/subscription-stepper-state.service';\nimport { Settings } from '../../core/config/settings.service';\nimport { Toast } from '../../core/ui/toast.service';\nimport { Subscriptions } from '../../shared/billing/subscriptions.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { LocalStorage } from '@common/core/services/local-storage.service';\nimport { Plan } from '@common/core/types/models/Plan';\nimport { finalize } from 'rxjs/operators';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { PaypalSubscriptions } from '@common/billing/subscriptions/paypal-subscriptions';\n\nexport interface CreditCard {\n    number?: number|string;\n    expiration_month?: number|string;\n    expiration_year?: number|string;\n    security_code?: number|string;\n}\n\nenum Steps {\n    Plans = 0,\n    Period = 1,\n    Payment = 2\n}\n\ninterface LocalStorageState {\n    initial?: number;\n    final?: number;\n}\n\nconst LOCAL_STORAGE_KEY = 'be.onboarding.selected';\n\n@Component({\n    selector: 'upgrade-page',\n    templateUrl: './upgrade-page.component.html',\n    styleUrls: ['./upgrade-page.component.scss'],\n    providers: [SubscriptionStepperState],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpgradePageComponent implements OnInit {\n    @ViewChild(MatStepper, { static: true }) stepper: MatStepper;\n    @Input() set mode(value: 'pricing'|'subscribe'|'changePlan') {\n        this.state.mode = value;\n    }\n    public loading$ = new BehaviorSubject<boolean>(false);\n\n    constructor(\n        private subscriptions: Subscriptions,\n        private route: ActivatedRoute,\n        public settings: Settings,\n        private router: Router,\n        private toast: Toast,\n        public state: SubscriptionStepperState,\n        private localStorage: LocalStorage,\n        private currentUser: CurrentUser,\n        private paypalSubscriptions: PaypalSubscriptions,\n    ) {}\n\n    ngOnInit() {\n        this.route.data.subscribe((data: {plans: Plan[]}) => {\n            this.state.setPlans(data.plans);\n            if (this.state.mode === 'subscribe') {\n               this.hydrateStateFromLocalStorage();\n            }\n        });\n    }\n\n    private hydrateStateFromLocalStorage() {\n        const storedState = this.localStorage.get(LOCAL_STORAGE_KEY) as LocalStorageState;\n        if (storedState && storedState.initial && storedState.final) {\n            const initialPlan = this.state.plans.find(p => p.id === storedState.initial),\n                finalPlan = this.state.plans.find(p => p.id === storedState.final);\n            if (initialPlan && finalPlan) {\n                this.state.selectInitialPlan(initialPlan);\n                this.state.selectPlanById(finalPlan.id);\n                this.stepper.selectedIndex = Steps.Payment;\n            }\n        }\n    }\n\n    public nextStep() {\n        if (this.state.mode === 'changePlan' && this.stepper.selectedIndex === Steps.Period) {\n            this.changePlan();\n        } else if (this.state.mode === 'pricing' && this.stepper.selectedIndex === Steps.Period) {\n            this.localStorage.set(LOCAL_STORAGE_KEY, {\n                initial: this.state.initialPlan$.value.id,\n                final: this.state.selectedPlan$.value.id\n            });\n            this.router.navigate(['register']);\n        } else {\n            this.stepper.next();\n        }\n    }\n\n    public onCompleted() {\n        this.loading$.next(false);\n        this.router.navigate(['/']);\n        this.localStorage.remove(LOCAL_STORAGE_KEY);\n        this.toast.open({\n            message: 'Subscribed to \":planName\" plan successfully.',\n            replacements: {planName: this.getSelectedOrParentPlanName()},\n        });\n    }\n\n    /**\n     * Change user's active subscription plan to specified one.\n     */\n    public changePlan() {\n        const plan = this.state.selectedPlan$.value,\n            activeSubscription = this.currentUser.getSubscription();\n        // user already subscribed\n        if (this.currentUser.getSubscription({planId: plan.id})) {\n            return;\n        }\n        this.loading$.next(true);\n        if (activeSubscription.gateway === 'paypal') {\n            this.paypalSubscriptions.changePlan(activeSubscription, plan).then(user => {\n                this.loading$.next(false);\n                this.currentUser.assignCurrent(user);\n                this.router.navigate(['/billing/subscription']);\n                this.toast.open('Subscription plan changed.');\n            });\n        } else {\n            this.subscriptions.changePlan(activeSubscription.id, plan)\n                .pipe(finalize(() => this.loading$.next(false)))\n                .subscribe(response => {\n                    this.currentUser.assignCurrent(response['user']);\n                    this.router.navigate(['/billing/subscription']);\n                    this.toast.open('Subscription plan changed.');\n                });\n        }\n    }\n\n    private getSelectedOrParentPlanName(): string {\n        const selectedPlan = this.state.selectedPlan$.value;\n        const plan = selectedPlan.parent ? selectedPlan.parent : selectedPlan;\n        return plan.name;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Resolve, RouterStateSnapshot, ActivatedRouteSnapshot, Router} from '@angular/router';\nimport {catchError, map, mergeMap} from 'rxjs/operators';\nimport {EMPTY, Observable, of} from 'rxjs';\nimport {Plan} from '@common/core/types/models/Plan';\nimport {Plans} from '@common/shared/billing/plans.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BillingPlansResolver implements Resolve<Plan[]> {\n    constructor(\n        private plans: Plans,\n        private router: Router\n    ) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Plan[]> {\n        return this.plans.all({order: 'position|asc', perPage: 30})\n            .pipe(map(response => response.pagination.data))\n            .pipe(\n                catchError(() => {\n                    this.router.navigateByUrl('/');\n                    return EMPTY;\n                }),\n                mergeMap((plans: Plan[]) => {\n                    return of(plans);\n                })\n            );\n    }\n}\n\n","<div class=\"text\" trans>Accepted Payment Methods</div>\n<div class=\"card-icons\">\n    <img [src]=\"getCardIcon('paypal')\">\n    <img [src]=\"getCardIcon(card)\" *ngFor=\"let card of acceptedCards\">\n</div>","import {ChangeDetectionStrategy, Component, ElementRef, OnInit} from '@angular/core';\nimport {Settings} from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'accepted-payments-header',\n    templateUrl: './accepted-payments-header.component.html',\n    styleUrls: ['./accepted-payments-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcceptedPaymentsHeaderComponent implements OnInit {\n    public acceptedCards: string[] = [];\n\n    constructor(private settings: Settings, public el: ElementRef) {}\n\n    ngOnInit() {\n        this.acceptedCards = this.settings.getJson('billing.accepted_cards', []);\n    }\n\n    public getCardIcon(card: string) {\n        return this.settings.getAssetUrl() + 'images/billing/' + card.toLowerCase() + '.png';\n    }\n}\n","<ul *ngIf=\"getPlan()\" [class.dense]=\"dense\">\n    <ng-container *ngIf=\"getPlan().show_permissions\">\n        <li *ngFor=\"let permission of getPlan().permissions\">\n            <mat-icon class=\"check-icon\" svgIcon=\"check\" *ngIf=\"showCheckIcons\"></mat-icon>\n            <span>{{permission.display_name || permission.name}}</span>\n        </li>\n    </ng-container>\n    <ng-container *ngIf=\"getPlan().features.length\">\n        <li *ngFor=\"let feature of getPlan().features\">\n            <mat-icon class=\"check-icon\" svgIcon=\"check\" *ngIf=\"showCheckIcons\"></mat-icon>\n            <span>{{feature}}</span>\n        </li>\n    </ng-container>\n</ul>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {Plan} from '@common/core/types/models/Plan';\n\n@Component({\n    selector: 'plan-features-list',\n    templateUrl: './plan-features-list.component.html',\n    styleUrls: ['./plan-features-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlanFeaturesListComponent {\n    @Input() plan: Plan;\n    @Input() showCheckIcons = false;\n    @Input() dense = false;\n\n    public getPlan() {\n        return this.plan.parent || this.plan;\n    }\n}\n","<accepted-payments-header></accepted-payments-header>\n\n<ng-container *ngIf=\"plan\">\n    <div class=\"selected-plan\">\n        <div class=\"header\"><full-plan-name [plan]=\"plan\"></full-plan-name></div>\n        <plan-features-list class=\"plan-features-list\" [plan]=\"plan\" [showCheckIcons]=\"true\" [dense]=\"true\"></plan-features-list>\n    </div>\n\n    <div class=\"divider\"></div>\n\n    <div class=\"secure-shopping\">\n        <div class=\"icon-container\">\n            <mat-icon svgIcon=\"shield-custom\"></mat-icon>\n        </div>\n        <div class=\"text\">\n            <div class=\"primary\" trans>SSL Secure Payment</div>\n            <div class=\"secondary\" trans>Your information is protected by 256-bit SSL encryption</div>\n        </div>\n    </div>\n</ng-container>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {Plan} from '@common/core/types/models/Plan';\n\n@Component({\n    selector: 'upgrade-page-aside',\n    templateUrl: './upgrade-page-aside.component.html',\n    styleUrls: ['./upgrade-page-aside.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpgradePageAsideComponent {\n    @Input() plan: Plan;\n}\n","<ng-container *ngIf=\"state.selectedPlan$ | async as selectedPlan\">\n    <div class=\"line\">\n        <div class=\"summary-left\">\n            <full-plan-name [plan]=\"selectedPlan\"></full-plan-name>\n        </div>\n        <div class=\"summary-right\">{{selectedPlan.amount | currency:selectedPlan.currency}}</div>\n    </div>\n\n    <div class=\"line emphasis\">\n        <div class=\"summary-left\" trans>Total</div>\n        <div class=\"summary-right\">{{selectedPlan.amount | currency:selectedPlan.currency}}</div>\n    </div>\n</ng-container>","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\n\n@Component({\n    selector: 'order-summary',\n    templateUrl: './order-summary.component.html',\n    styleUrls: ['./order-summary.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderSummaryComponent {\n    constructor(public state: SubscriptionStepperState) {}\n}\n","<form (ngSubmit)=\"submitForm()\" class=\"card-form many-inputs\" ngNativeValidate>\n    <div class=\"input-container\">\n        <label for=\"cardNumber\" trans>Credit or Debit Card</label>\n        <div id=\"cardNumber\" class=\"fake-input\"></div>\n    </div>\n\n    <div class=\"input-container\">\n        <label for=\"cardExpiry\" trans>Card Expiration</label>\n        <div id=\"cardExpiry\" class=\"fake-input\"></div>\n    </div>\n\n    <div class=\"input-container\">\n        <label for=\"cardCvc\" trans>CVC</label>\n        <div id=\"cardCvc\" class=\"fake-input\"></div>\n    </div>\n\n    <div class=\"error margin-bottom\" role=\"alert\" *ngIf=\"error$ | async as error\">{{error}}</div>\n\n    <order-summary *ngIf=\"showOrderSummary\"></order-summary>\n\n    <button type=\"submit\" *ngIf=\"showSubmitButton\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">{{submitButtonText | trans}}</button>\n</form>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output\n} from '@angular/core';\nimport {finalize} from 'rxjs/operators';\nimport {User} from '../../core/types/models/User';\nimport {Settings} from '../../core/config/settings.service';\nimport {LazyLoaderService} from '../../core/utils/lazy-loader.service';\nimport {CurrentUser} from '../../auth/current-user';\nimport {Subscriptions} from '../../shared/billing/subscriptions.service';\nimport {Toast} from '../../core/ui/toast.service';\nimport {ThemeService} from '@common/core/theme.service';\nimport {BehaviorSubject} from 'rxjs';\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\n\n@Component({\n    selector: 'credit-card-form',\n    templateUrl: './credit-card-form.component.html',\n    styleUrls: ['./credit-card-form.component.scss'],\n    // changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CreditCardFormComponent implements OnDestroy, AfterViewInit {\n\n    /**\n     * Event fired when form is submitted and card is added successfully on active gateway.\n     */\n    @Output() created: EventEmitter<User> = new EventEmitter();\n\n    /**\n     * Display text for form submit button.\n     */\n    @Input() submitButtonText = 'Submit';\n\n    /**\n     * Whether form submit button should be shown.\n     */\n    @Input() showSubmitButton = true;\n\n    /**\n     * Whether order summary should be shown in the template.\n     */\n    @Input() showOrderSummary = false;\n\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public error$ = new BehaviorSubject<string>(null);\n    private stripeElements: stripe.elements.Element[] = [];\n\n    constructor(\n        private subscriptions: Subscriptions,\n        private currentUser: CurrentUser,\n        private settings: Settings,\n        private zone: NgZone,\n        private lazyLoader: LazyLoaderService,\n        private toast: Toast,\n        private theme: ThemeService,\n        private state: SubscriptionStepperState,\n    ) {\n        this.resetForm();\n    }\n\n    ngAfterViewInit() {\n        this.initStripe();\n    }\n\n    ngOnDestroy() {\n        this.destroyStripe();\n    }\n\n    /**\n     * Submit stripe elements credit card form.\n     */\n    public async submitForm() {\n        this.loading$.next(true);\n\n        const {token, error} = await this.state.stripe.createToken(this.stripeElements[0]);\n\n        if (error) {\n            this.error$.next(error.message);\n            this.loading$.next(false);\n        } else {\n            this.addCardToUser(token);\n        }\n    }\n\n    public addCardToUser(stripeToken: stripe.Token) {\n        this.loading$.next(true);\n        this.subscriptions.addCard(stripeToken.id)\n            .pipe(finalize(() =>  this.loading$.next(false)))\n            .subscribe(response => {\n                this.resetForm();\n                this.currentUser.assignCurrent(response.user);\n                this.created.emit(response.user);\n            }, err => {\n                this.error$.next(err.messages.general);\n            });\n    }\n\n    /**\n     * Initiate stripe elements credit card form.\n     */\n    private initStripe() {\n        this.lazyLoader.loadAsset('https://js.stripe.com/v3', {type: 'js'}).then(() => {\n            const fields = ['cardNumber', 'cardExpiry', 'cardCvc'] as stripe.elements.elementsType[];\n            this.state.stripe = Stripe(this.settings.get('billing.stripe_public_key'));\n            const elements = this.state.stripe.elements();\n\n            const isDarkMode = this.theme.selectedTheme$.value.is_dark;\n            fields.forEach(field => {\n                const el = elements.create(field, {classes: {base: 'base'}, style: {base: {color: isDarkMode ? '#fff' : 'inherit'}}});\n                el.mount('#' + field);\n                el.on('change', this.onChange.bind(this));\n                this.stripeElements.push(el);\n            });\n        });\n    }\n\n    /**\n     * Destroy all stripe elements instances.\n     */\n    private destroyStripe() {\n        this.stripeElements.forEach(el => {\n            el.unmount();\n            el.destroy();\n        });\n    }\n\n    /**\n     * Fired on stripe element \"change\" event.\n     */\n    private onChange(change: stripe.elements.ElementChangeResponse) {\n        this.zone.run(() => {\n            this.error$.next(change.error ? change.error.message : null);\n        });\n    }\n\n    /**\n     * Reset credit card form.\n     */\n    private resetForm() {\n        this.error$.next(null);\n    }\n}\n","<mat-tab-group [dynamicHeight]=\"true\" color=\"accent\" [selectedIndex]=\"selectedIndex$ | async\">\n    <mat-tab [label]=\"'Bank Card' | trans\" *ngIf=\"settings.get('billing.stripe.enable')\">\n        <credit-card-form (created)=\"subscribeOnStripe()\" [submitButtonText]=\"submitText\" [showOrderSummary]=\"true\"></credit-card-form>\n    </mat-tab>\n    <mat-tab label=\"Paypal\" [disabled]=\"disablePaypalTab\" *ngIf=\"settings.get('billing.paypal.enable')\">\n        <div class=\"paypal-tab\">\n            <p class=\"info\" trans>After clicking the button below, you will be redirected to paypal.com to approve the subscription.</p>\n            <order-summary></order-summary>\n            <button mat-raised-button color=\"accent\" (click)=\"subscribeOnPaypal()\" [disabled]=\"loading$ | async\">{{submitText | trans}}</button>\n        </div>\n    </mat-tab>\n</mat-tab-group>\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from '@angular/core';\nimport {Subscription} from '@common/shared/billing/models/subscription';\nimport {Plan} from '@common/core/types/models/Plan';\nimport {CreateSubOnStripeResponse, Subscriptions} from '@common/shared/billing/subscriptions.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {PaypalSubscriptions} from '@common/billing/subscriptions/paypal-subscriptions';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {Settings} from '@common/core/config/settings.service';\nimport {User} from '@common/core/types/models/User';\nimport {CreditCard} from '@common/billing/upgrade-page/upgrade-page.component';\nimport {BehaviorSubject} from 'rxjs';\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\n\nexport interface SubscriptionCompletedEvent {\n    status: 'created'|'updated';\n}\n\ninterface NewSubscriptionPayload {\n    card?: CreditCard;\n    start_date?: string;\n    plan_id: number;\n}\n\n@Component({\n    selector: 'create-subscription-panel',\n    templateUrl: './create-subscription-panel.component.html',\n    styleUrls: ['./create-subscription-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CreateSubscriptionPanelComponent {\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public selectedIndex$ = new BehaviorSubject<number>(0);\n\n    /**\n     * Fired when subscription creation starts or ends.\n     */\n    @Output() loading = new EventEmitter<boolean>();\n\n    /**\n     * Text for submit purchase button.\n     */\n    @Input() submitText = 'Submit Purchase';\n\n    /**\n     * Whether paypal tab should be disabled.\n     */\n    @Input() disablePaypalTab = false;\n\n    /**\n     * We're changing user subscription from this one.\n     * Used for prorating the new subscription start date.\n     */\n    @Input() from: Subscription;\n\n    /**\n     * Plan user should be subscribed to.\n     */\n    @Input() plan: Plan;\n\n    /**\n     * Fired when subscription is created or updated.\n     */\n    @Output() completed: EventEmitter<SubscriptionCompletedEvent> = new EventEmitter();\n\n    constructor(\n        private subscriptions: Subscriptions,\n        private currentUser: CurrentUser,\n        private paypal: PaypalSubscriptions,\n        private toast: Toast,\n        public settings: Settings,\n        private state: SubscriptionStepperState,\n    ) {}\n\n    /**\n     * Subscribe user to current plan on stripe gateway.\n     */\n    public subscribeOnStripe() {\n        // if user is already subscribed to this plan, fire \"updated\" event and bail\n        if (this.currentUser.getSubscription({gateway: 'stripe', planId: this.plan.id})) {\n            return this.completed.emit({status: 'updated'});\n        }\n\n        this.startLoading();\n\n        this.subscriptions.createOnStripe(this.getNewSubscriptionPayload())\n            .subscribe(response => {\n                if (response.status === 'complete') {\n                    this.completeSubscription(response.user);\n                } else {\n                   this.confirmCardPayment(response);\n                }\n            }, err => {\n                const key = Object.keys(err.messages)[0];\n                this.toast.open(err.messages[key] || 'There was an issue. Please try again later.');\n                this.stopLoading();\n            });\n    }\n\n    /**\n     * Confirm card payment via 3D secure.\n     */\n    private confirmCardPayment(response: CreateSubOnStripeResponse) {\n        this.state.stripe.confirmCardPayment(response.payment_intent_secret)\n            .then(result => {\n                if (result.error) {\n                    this.stopLoading();\n                    this.toast.open('Card payment was not confirmed.', {action: 'Retry'})\n                        .onAction()\n                        .subscribe(() => {\n                            this.confirmCardPayment(response);\n                        });\n                } else {\n                    this.subscriptions.finalizeOnStripe(response.reference, response.user.id)\n                        .subscribe(finalResponse => {\n                            this.completeSubscription(finalResponse.user);\n                        });\n                }\n            });\n    }\n\n    /**\n     * Subscribe user to current plan on paypal gateway.\n     */\n    public subscribeOnPaypal() {\n        // if user is already subscribed to this plan, fire \"updated\" event and bail\n        if (this.currentUser.getSubscription({gateway: 'paypal', planId: this.plan.id})) {\n            return this.completed.emit({status: 'updated'});\n        }\n\n        this.startLoading();\n\n        this.paypal.subscribe(this.getNewSubscriptionPayload()).then(user => {\n            this.completeSubscription(user);\n            this.selectedIndex$.next(0);\n        }).catch(message => {\n            this.stopLoading();\n            this.toast.open(message || 'There was an issue. Please try again later.');\n        });\n    }\n\n    /**\n     * Get payload for backend for creating a new subscription.\n     */\n    private getNewSubscriptionPayload(): NewSubscriptionPayload {\n       const payload = {plan_id: this.plan.id};\n\n       if (this.from) {\n           payload['start_date'] = this.from.renews_at;\n       }\n\n       return payload;\n    }\n\n    private completeSubscription(user: User) {\n        this.stopLoading();\n        this.currentUser.assignCurrent(user);\n        this.completed.emit({status: 'created'});\n    }\n\n    private startLoading() {\n        this.loading$.next(true);\n        this.loading.emit(true);\n    }\n\n    private stopLoading() {\n        this.loading$.next(false);\n        this.loading.emit(false);\n    }\n}\n","<material-navbar [menuPosition]=\"settings.get('vebto.navbar.defaultPosition')\"></material-navbar>\n\n<div class=\"content container mat-elevation-z1\" *ngIf=\"activeSubscription$ | async as activeSubscription\">\n    <div class=\"main\">\n        <div class=\"main-section\">\n            <div class=\"main-section-title\"><full-plan-name [plan]=\"activeSubscription.plan\"></full-plan-name></div>\n            <div class=\"main-section-content\">\n                <ng-container *ngIf=\"canCancel()\">\n                    <p>\n                        {{ 'Your plan will automatically renew on' | trans }}\n                        <strong>{{getFormattedRenewDate() | formattedDate}}</strong>\n                        {{ \"and you'll be charged\" | trans }}\n                        <strong>{{activeSubscription.plan.amount | currency:activeSubscription.plan.currency}}</strong>.\n                    </p>\n\n                    <a mat-raised-button color=\"accent\" routerLink=\"/billing/upgrade\" trans>Change Plan</a>\n                </ng-container>\n\n                <ng-container *ngIf=\"canResume()\">\n                    <p>{{ 'You are on a grace period until' | trans }} <strong>{{getFormattedEndDate() | formattedDate}}</strong>. {{ 'Your subscription will not automatically resume and you will not be charged' | trans }}.</p>\n                    <p trans>You still have access to your plan's features until this date and you can resume your subscription anytime, by clicking button below.</p>\n                    <button mat-raised-button color=\"accent\" (click)=\"resumeSubscription()\" trans>Resume</button>\n                </ng-container>\n            </div>\n        </div>\n\n        <div class=\"main-section\" *ngIf=\"canCancel() && canChangePaymentMethod()\">\n            <div class=\"main-section-title\" trans>Payment Method</div>\n            <div class=\"main-title-description\" trans>Change your preferred payment method below. You can use a credit card or PayPal.</div>\n\n            <p>{{ 'Current payment Method' | trans }}: <strong>{{activeSubscription.gateway === 'paypal' ? 'PayPal' : ('Credit Card' | trans)}}</strong></p>\n\n            <div class=\"card-preview\" *ngIf=\"activeSubscription.gateway === 'stripe'\">\n                <div class=\"icon\"><mat-icon svgIcon=\"credit-card\"></mat-icon></div>\n                <div class=\"info\">{{currentUser.get('card_brand')}} **** {{currentUser.get('card_last_four')}}</div>\n            </div>\n\n            <create-subscription-panel\n                    (completed)=\"onPaymentMethodChange($event)\"\n                    (loading)=\"loading$.next($event)\"\n                    [plan]=\"getPlan()\"\n                    [from]=\"activeSubscription\"\n                    [disablePaypalTab]=\"activeSubscription.gateway === 'paypal'\"\n                    submitText=\"Change Payment Method\"\n            ></create-subscription-panel>\n        </div>\n\n        <div class=\"main-section\" *ngIf=\"canCancel()\">\n            <div class=\"main-section-title\" trans>Cancel Subscription</div>\n\n            <div class=\"main-section-content\">\n                <p trans>After cancelling subscription, you will have access to your active plan until your billing period end.</p>\n            </div>\n\n            <div class=\"main-section-actions\">\n                <button mat-raised-button color=\"warn\" (click)=\"maybeCancelSubscription()\" trans>Cancel</button>\n            </div>\n        </div>\n    </div>\n\n    <upgrade-page-aside [plan]=\"getPlan()\"></upgrade-page-aside>\n\n    <loading-indicator class=\"overlay\" [isVisible]=\"loading$ | async\"></loading-indicator>\n</div>\n\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { finalize, share } from 'rxjs/operators';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Subscription } from '@common/shared/billing/models/subscription';\nimport { Settings } from '@common/core/config/settings.service';\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\nimport { Subscriptions } from '@common/shared/billing/subscriptions.service';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { Toast } from '@common/core/ui/toast.service';\nimport { Plan } from '@common/core/types/models/Plan';\nimport { ConfirmModalComponent } from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport { SubscriptionCompletedEvent } from '@common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component';\nimport { User } from '@common/core/types/models/User';\n\n@Component({\n    selector: 'user-subscription-page',\n    templateUrl: './user-subscription-page.component.html',\n    styleUrls: ['./user-subscription-page.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserSubscriptionPageComponent implements OnInit {\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public activeSubscription$ = new BehaviorSubject<Subscription>(null);\n\n    constructor(\n        public settings: Settings,\n        private modal: Modal,\n        private subscriptions: Subscriptions,\n        public currentUser: CurrentUser,\n        private toast: Toast,\n    ) {}\n\n    ngOnInit() {\n        this.activeSubscription$.next(this.currentUser.getSubscription());\n    }\n\n    public canResume() {\n        return this.currentUser.onGracePeriod();\n    }\n\n    public canCancel() {\n        return this.currentUser.isSubscribed() && !this.currentUser.onGracePeriod();\n    }\n\n    public canChangePaymentMethod() {\n        return this.settings.get('billing.stripe.enable') || this.settings.get('billing.paypal.enable');\n    }\n\n    public getFormattedEndDate(): string {\n        if ( ! this.activeSubscription$.value.ends_at) return null;\n        return this.activeSubscription$.value.ends_at.split(' ')[0];\n    }\n\n    public getFormattedRenewDate() {\n        if ( ! this.activeSubscription$.value.renews_at) return null;\n        return this.activeSubscription$.value.renews_at.split(' ')[0];\n    }\n\n    public getPlan(): Plan {\n        return this.activeSubscription$.value.plan;\n    }\n\n    /**\n     * Ask user to confirm deletion of selected templates\n     * and delete selected templates if user confirms.\n     */\n    public maybeCancelSubscription() {\n        this.modal.open(ConfirmModalComponent, {\n            title: 'Cancel Subscription',\n            body: 'Are you sure you want to cancel your subscription?',\n            ok: 'Yes, Cancel',\n            cancel: 'Go Back'\n        }).afterClosed().subscribe(confirmed => {\n            if ( ! confirmed) return;\n            this.cancelSubscription().subscribe(() => {\n                this.toast.open('Subscription cancelled.');\n            });\n        });\n    }\n\n    /**\n     * Resume cancelled subscription.\n     */\n    public resumeSubscription() {\n        this.loading$.next(true);\n        this.subscriptions.resume(this.activeSubscription$.value.id)\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.currentUser.setSubscription(response.subscription);\n                this.activeSubscription$.next(this.currentUser.getSubscription());\n                this.toast.open('Subscription resumed.');\n            });\n    }\n\n    /**\n     * Called after user payment method for active subscription has been changed successfully.\n     */\n    public onPaymentMethodChange(e: SubscriptionCompletedEvent) {\n        // if we've only changed customer card information on same\n        // payment gateway, show success message and bail\n        if (e.status === 'updated') {\n            this.toast.open('Payment method updated.');\n            return;\n        }\n\n        this.loading$.next(true);\n\n        // otherwise cancel user's subscription on the other gateway\n        this.cancelSubscription({delete: true}).subscribe(() => {\n            this.toast.open('Payment method updated.');\n        });\n    }\n\n    /**\n     * Cancel currently active user subscription.\n     */\n    private cancelSubscription(params: {delete?: boolean} = {}): Observable<{user: User}> {\n        this.loading$.next(true);\n\n        const request = this.subscriptions.cancel(this.activeSubscription$.value.id, {delete: params.delete})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .pipe(share());\n\n        request.subscribe(response => {\n            // set new active subscription, if user had more then one\n            this.updateUserAndSubscription(response.user);\n        });\n\n        return request;\n    }\n\n    /**\n     * Update current user and active subscription.\n     */\n    private updateUserAndSubscription(user: User) {\n        this.currentUser.assignCurrent(user);\n        this.activeSubscription$.next(this.currentUser.getSubscription());\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Resolve, RouterStateSnapshot, ActivatedRouteSnapshot} from '@angular/router';\nimport {map} from 'rxjs/operators';\nimport {ValueLists} from '../../core/services/value-lists.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CurrenciesListResolver implements Resolve<any> {\n    constructor(private valueLists: ValueLists) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<any> {\n        return this.valueLists.get(['currencies']).pipe(map(response => response.currencies)).toPromise();\n    }\n}\n\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\nimport {CurrentUser} from '../../auth/current-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserSubscribedGuard implements CanActivate, CanActivateChild {\n\n    constructor(private currentUser: CurrentUser, private router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    private handle() {\n        if (this.currentUser.isSubscribed()) { return true; }\n\n        this.router.navigate(['/billing/upgrade']);\n\n        return false;\n    }\n}","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {Invoice} from '@common/billing/invoices/invoice';\n\nconst BASE_URI = 'billing/invoice';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class InvoiceService {\n    constructor(private http: AppHttpClient) {\n    }\n\n    public index(params: {userId?: number} = {}): BackendResponse<{invoices: Invoice[]}> {\n        return this.http.get(`${BASE_URI}`, params);\n    }\n}\n","<material-navbar [menuPosition]=\"settings.get('vebto.navbar.defaultPosition')\"></material-navbar>\n\n<div class=\"container\">\n    <h1 trans>Your Payment History</h1>\n\n    <div class=\"material-panel\">\n        <mat-table [dataSource]=\"dataSource$ | async\" class=\"responsive-material-table\">\n            <ng-container matColumnDef=\"date\">\n                <mat-header-cell *matHeaderCellDef trans>Date</mat-header-cell>\n                <mat-cell *matCellDef=\"let invoice\" data-label=\"Date:\">{{invoice.created_at | formattedDate}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"amount\">\n                <mat-header-cell *matHeaderCellDef trans>Amount</mat-header-cell>\n                <mat-cell *matCellDef=\"let invoice\" data-label=\"Amount:\">{{invoice.subscription.plan.currency_symbol + invoice.subscription.plan.amount}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"status\">\n                <mat-header-cell *matHeaderCellDef trans>Status</mat-header-cell>\n                <mat-cell *matCellDef=\"let invoice\" data-label=\"Status:\" trans>{{invoice.paid ? 'Paid' : 'Pending'}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"invoice\">\n                <mat-header-cell *matHeaderCellDef trans>Invoice</mat-header-cell>\n                <mat-cell *matCellDef=\"let invoice\" data-label=\"Invoice:\">\n                    <a [href]=\"getInvoiceUrl(invoice)\" target=\"_blank\" trans>View</a>\n                </mat-cell>\n            </ng-container>\n\n            <mat-header-row *matHeaderRowDef=\"['date', 'amount', 'status', 'invoice']\"></mat-header-row>\n            <mat-row *matRowDef=\"let myRowData; columns: ['date', 'amount', 'status', 'invoice']\"></mat-row>\n        </mat-table>\n\n        <no-results-message *ngIf=\"!(dataSource$ | async).length && !(loading$ | async)\">\n            <span primary-text trans>Nothing To Display.</span>\n            <span secondary-text trans>You do not have any invoices yet.</span>\n        </no-results-message>\n    </div>\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {InvoiceService} from '@common/billing/invoices/invoice.service';\nimport {Invoice} from '@common/billing/invoices/invoice';\nimport {BehaviorSubject} from 'rxjs';\nimport {Settings} from '@common/core/config/settings.service';\nimport {finalize} from 'rxjs/operators';\nimport {CurrentUser} from '@common/auth/current-user';\n\n@Component({\n    selector: 'invoice-index',\n    templateUrl: './invoice-index.component.html',\n    styleUrls: ['./invoice-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InvoiceIndexComponent implements OnInit {\n    public dataSource$ = new BehaviorSubject<Invoice[]>([]);\n    public loading$ = new BehaviorSubject<boolean>(false);\n\n    constructor(\n       private invoices: InvoiceService,\n       public settings: Settings,\n       private currentUser: CurrentUser,\n    ) {}\n\n    ngOnInit() {\n        this.loading$.next(true);\n        this.invoices.index({userId: this.currentUser.get('id')})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.dataSource$.next(response.invoices);\n            });\n    }\n\n    public getInvoiceUrl(invoice: Invoice) {\n        return this.settings.getBaseUrl(true) + 'secure/billing/invoice/' + invoice.uuid;\n    }\n}\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'pricing-page',\n  templateUrl: './pricing-page.component.html',\n  styleUrls: ['./pricing-page.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PricingPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<upgrade-page mode=\"pricing\"></upgrade-page>","import { Route, RouterModule } from '@angular/router';\nimport { UpgradePageComponent } from './upgrade-page/upgrade-page.component';\nimport { NgModule } from '@angular/core';\nimport { BillingPlansResolver } from './upgrade-page/billing-plans-resolver.service';\nimport { UserSubscriptionPageComponent } from './subscriptions/user-subscription-page/user-subscription-page.component';\nimport { CurrenciesListResolver } from './upgrade-page/currencies-list-resolver.service';\nimport { UserSubscribedGuard } from './guards/user-subscribed-guard.service';\nimport { AuthGuard } from '../guards/auth-guard.service';\nimport { BillingEnabledGuard } from '../shared/billing/guards/billing-enabled-guard.service';\nimport { InvoiceIndexComponent } from '@common/billing/invoices/invoice-index/invoice-index.component';\nimport { CheckPermissionsGuard } from '@common/guards/check-permissions-guard.service';\nimport { PricingPageComponent } from '@common/billing/pricing-page/pricing-page.component';\nimport { RedirectToUpgradePage } from '@common/billing/guards/redirect-to-upgrade-page.service';\n\nexport const routes: Route[] = [\n    {\n        path: 'pricing',\n        component: PricingPageComponent,\n        data: {allowIfSubscriptionForced: true},\n        canActivate: [RedirectToUpgradePage],\n        resolve: {\n            plans: BillingPlansResolver,\n            currencies: CurrenciesListResolver\n        }\n    },\n    {\n        path: '',\n        canActivate: [AuthGuard, CheckPermissionsGuard],\n        canActivateChild: [CheckPermissionsGuard],\n        data: {allowIfSubscriptionForced: true},\n        children: [\n            {\n                path: 'upgrade',\n                component: UpgradePageComponent,\n                canActivate: [BillingEnabledGuard, AuthGuard],\n                resolve: {\n                    plans: BillingPlansResolver,\n                    currencies: CurrenciesListResolver\n                }\n            },\n            {\n                path: 'subscription',\n                component: UserSubscriptionPageComponent,\n                resolve: { plans: BillingPlansResolver },\n                canActivate: [BillingEnabledGuard, AuthGuard, UserSubscribedGuard],\n                data: { name: 'subscription' }\n            },\n            {\n                path: 'invoices',\n                component: InvoiceIndexComponent,\n                canActivate: [BillingEnabledGuard, AuthGuard, UserSubscribedGuard],\n            },\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class BillingRoutingModule {}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {CurrentUser} from '../../auth/current-user';\nimport {AppearanceListenerService} from '../../shared/appearance/appearance-listener.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RedirectToUpgradePage implements CanActivate {\n    constructor(\n        private currentUser: CurrentUser,\n        private router: Router,\n        private listener: AppearanceListenerService,\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (this.listener.active) {\n            return true;\n        }\n        if (this.currentUser.isSubscribed()) {\n            this.router.navigate(['billing/subscription']);\n            return false;\n        } else if (this.currentUser.isLoggedIn()) {\n            this.router.navigate(['billing/upgrade']);\n            return false;\n        }\n        return true;\n    }\n}\n","<div class=\"plans\" [class.has-recommended]=\"hasRecommendedPlan\">\n    <div class=\"plan\" *ngFor=\"let plan of getAllPlans(); last as last; first as first\" [class.recommended]=\"plan.recommended\" [class.last]=\"last\" [class.first]=\"first\">\n        <div class=\"name\">{{plan.name}}</div>\n        <div class=\"price-box\" *ngIf=\"!plan.free\">\n            <span class=\"number\">{{plan.amount | currency:plan.currency}}</span>\n            <span class=\"interval\"> / {{plan.interval | trans}}</span>\n        </div>\n        <div class=\"price-box\" *ngIf=\"plan.free\" trans>Free</div>\n        <plan-features-list [plan]=\"plan\"></plan-features-list>\n        <button class=\"select-plan-button\" (click)=\"selectPlan(plan)\" mat-raised-button color=\"accent\" *ngIf=\"plan.recommended\" [disabled]=\"plan.free || userSubscribedToPlan(plan)\">\n            {{ (userSubscribedToPlan(plan) ? 'Your Current Plan' : 'Choose Plan') | trans }}\n        </button>\n        <button class=\"select-plan-button\" (click)=\"selectPlan(plan)\" mat-stroked-button color=\"accent\" *ngIf=\"!plan.recommended\" [disabled]=\"plan.free || userSubscribedToPlan(plan)\">\n            {{ (userSubscribedToPlan(plan) ? 'Your Current Plan' : 'Choose Plan') | trans }}\n        </button>\n    </div>\n</div>\n","import {ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {SubscriptionStepperState} from '../../subscriptions/subscription-stepper-state.service';\nimport {Plan} from '@common/core/types/models/Plan';\nimport { CurrentUser } from '@common/auth/current-user';\n\n@Component({\n    selector: 'select-plan-panel',\n    templateUrl: './select-plan-panel.component.html',\n    styleUrls: ['./select-plan-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectPlanPanelComponent implements OnInit {\n    public hasRecommendedPlan = false;\n    @Output() selected = new EventEmitter();\n\n    constructor(\n        public state: SubscriptionStepperState,\n        public currentUser: CurrentUser,\n    ) {}\n\n    ngOnInit() {\n        this.hasRecommendedPlan = this.state.plans.filter(plan => plan.recommended).length > 0;\n    }\n\n    public selectPlan(plan: Plan) {\n        this.state.selectInitialPlan(plan);\n        // fire event on next render to avoid race conditions\n        setTimeout(() => this.selected.emit(plan));\n    }\n\n    public getAllPlans() {\n        return this.state.plans.filter(plan => !plan.parent_id && !plan.hidden);\n    }\n\n    public userSubscribedToPlan(plan: Plan): boolean {\n        return !!this.currentUser.getSubscription({planId: plan.id});\n    }\n}\n","<div class=\"subscription-period-step step-container\" *ngIf=\"state.initialPlan$ | async as initialPlan\">\n    <div class=\"left-col\">\n        <div class=\"title\" trans>Select the duration of your plan. Longer plans offer better discounts!</div>\n        <mat-radio-group class=\"periods\" [(ngModel)]=\"state.radioGroupModel\" (change)=\"state.selectPlanById(state.radioGroupModel)\">\n            <div class=\"radio-button-wrapper no-label\">\n                <mat-radio-button [value]=\"initialPlan.id\" class=\"period\" color=\"accent\">\n                    <div class=\"radio-button-content\">\n                        <div class=\"name\">1 {{initialPlan.interval | trans}} {{ 'subscription' | trans }}:</div>\n                        <div class=\"price\">{{initialPlan.amount | currency:initialPlan.currency}}/{{initialPlan.interval | trans}}</div>\n                    </div>\n                </mat-radio-button>\n            </div>\n            <div class=\"radio-button-wrapper\" *ngFor=\"let plan of state.getChildPlans(initialPlan)\">\n                <ng-container *ngIf=\"state.selectedPlan$ | async as selectedPlan\">\n                    <div class=\"savings-label\">{{'Save' | trans}} {{getPlanSavings(selectedPlan.parent || selectedPlan, plan)}}%</div>\n                </ng-container>\n                <mat-radio-button [value]=\"plan.id\" class=\"period\" color=\"accent\">\n                    <div class=\"radio-button-content\">\n                        <div class=\"name\">{{plan.name | trans}}:</div>\n                        <div class=\"price\">{{getPlanPerMonthAmount(plan) | currency:plan.currency}}/{{initialPlan.interval | trans}}</div>\n                    </div>\n                </mat-radio-button>\n            </div>\n        </mat-radio-group>\n\n        <div class=\"actions\">\n            <button mat-button matStepperPrevious trans>Back</button>\n            <button mat-raised-button color=\"accent\" (click)=\"selected.emit()\">\n                {{ (state.mode === 'changePlan' ? 'Change Plan' : 'Select') | trans }}\n            </button>\n        </div>\n    </div>\n\n    <upgrade-page-aside *ngIf=\"showSidebar\" [plan]=\"state.selectedPlan$ | async\" class=\"right-col\"></upgrade-page-aside>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { SubscriptionStepperState } from '../../subscriptions/subscription-stepper-state.service';\nimport { Plan } from '@common/core/types/models/Plan';\n\n@Component({\n    selector: 'select-plan-period-panel',\n    templateUrl: './select-plan-period-panel.component.html',\n    styleUrls: ['./select-plan-period-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectPlanPeriodPanelComponent {\n    @Input() showSidebar = false;\n    @Output() selected = new EventEmitter();\n\n    constructor(\n        public state: SubscriptionStepperState,\n    ) {}\n\n    public getPlanSavings(base: Plan, parent: Plan): number {\n        const amount = this.getPlanPerMonthAmount(parent);\n        const savings = (base.amount - amount) / base.amount * 100;\n        return Math.ceil(savings);\n    }\n\n    public getPlanPerMonthAmount(plan: Plan) {\n        return plan.amount / plan.interval_count;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\nimport {CurrentUser} from '../../auth/current-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserNotSubscribedGuard implements CanActivate, CanActivateChild {\n\n    constructor(private currentUser: CurrentUser, private router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    private handle() {\n        if ( ! this.currentUser.isSubscribed()) { return true; }\n\n        this.router.navigate(['/billing/subscription']);\n\n        return false;\n    }\n}\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\n\n@Component({\n    selector: 'contact-widget',\n    templateUrl: './contact-widget.component.html',\n    styleUrls: ['./contact-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContactWidgetComponent {}\n","<mat-icon svgIcon=\"question-answer\" class=\"icon\"></mat-icon>\n\n<div class=\"title\" trans>Do you have any questions about PRO accounts?</div>\n<div class=\"subtitle\" trans>Our support team will be happy to assist you.</div>\n<a mat-raised-button color=\"accent\" target=\"_blank\" routerLink=\"/contact\" trans>Contact Us</a>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { UpgradePageComponent } from './upgrade-page/upgrade-page.component';\nimport { BillingPlansResolver } from './upgrade-page/billing-plans-resolver.service';\nimport { BillingRoutingModule } from './billing-routing.module';\nimport { PlanFeaturesListComponent } from './upgrade-page/plan-features-list/plan-features-list.component';\nimport { OrderSummaryComponent } from './upgrade-page/order-summary/order-summary.component';\nimport { AcceptedPaymentsHeaderComponent } from './upgrade-page/accepted-payments-header/accepted-payments-header.component';\nimport { UserSubscriptionPageComponent } from './subscriptions/user-subscription-page/user-subscription-page.component';\nimport { UpgradePageAsideComponent } from './upgrade-page/upgrade-page-aside/upgrade-page-aside.component';\nimport { CurrenciesListResolver } from './upgrade-page/currencies-list-resolver.service';\nimport { CreditCardFormComponent } from './credit-card-form/credit-card-form.component';\nimport { PaypalSubscriptions } from './subscriptions/paypal-subscriptions';\nimport { SelectPlanPanelComponent } from './plans/select-plan-panel/select-plan-panel.component';\nimport { SelectPlanPeriodPanelComponent } from './plans/select-plan-period-panel/select-plan-period-panel.component';\nimport { SubscriptionStepperState } from './subscriptions/subscription-stepper-state.service';\nimport { UserNotSubscribedGuard } from './guards/user-not-subscribed-guard.service';\nimport { UserSubscribedGuard } from './guards/user-subscribed-guard.service';\nimport { CreateSubscriptionPanelComponent } from './subscriptions/create-subscription-panel/create-subscription-panel.component';\nimport { ContactWidgetComponent } from './upgrade-page/contact-widget/contact-widget.component';\nimport { FullPlanNameModule } from '../shared/billing/full-plan-name/full-plan-name.module';\nimport { InvoiceIndexComponent } from '@common/billing/invoices/invoice-index/invoice-index.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { PricingPageComponent } from './pricing-page/pricing-page.component';\nimport { MaterialNavbarModule } from '@common/core/ui/material-navbar/material-navbar.module';\nimport { TranslationsModule } from '@common/core/translations/translations.module';\nimport { FormatPipesModule } from '@common/core/ui/format-pipes/format-pipes.module';\nimport { NoResultsMessageModule } from '@common/core/ui/no-results-message/no-results-message.module';\nimport { LoadingIndicatorModule } from '@common/core/ui/loading-indicator/loading-indicator.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialNavbarModule,\n        BillingRoutingModule,\n        FullPlanNameModule,\n        TranslationsModule,\n        FormatPipesModule,\n        NoResultsMessageModule,\n        LoadingIndicatorModule,\n\n        // material\n        MatButtonModule,\n        MatIconModule,\n        MatSnackBarModule,\n        MatCheckboxModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatStepperModule,\n        MatProgressBarModule,\n        MatTabsModule,\n        MatRadioModule,\n        MatTableModule,\n    ],\n    declarations: [\n        UpgradePageComponent,\n        PlanFeaturesListComponent,\n        OrderSummaryComponent,\n        AcceptedPaymentsHeaderComponent,\n        UserSubscriptionPageComponent,\n        UpgradePageAsideComponent,\n        CreditCardFormComponent,\n        CreateSubscriptionPanelComponent,\n        SelectPlanPanelComponent,\n        SelectPlanPeriodPanelComponent,\n        ContactWidgetComponent,\n        InvoiceIndexComponent,\n        PricingPageComponent,\n    ],\n    providers: [\n        BillingPlansResolver,\n        CurrenciesListResolver,\n        PaypalSubscriptions,\n        SubscriptionStepperState,\n        SubscriptionStepperState,\n        UserNotSubscribedGuard,\n        UserSubscribedGuard,\n    ],\n    exports: [\n        BillingRoutingModule,\n    ]\n})\nexport class BillingModule {\n}\n"]}